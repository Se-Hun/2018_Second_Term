
bomb:     file format elf64-x86-64


Disassembly of section .init:

0000000000400b00 <_init>:
  400b00:	48 83 ec 08          	sub    $0x8,%rsp
  400b04:	48 8b 05 ed 34 20 00 	mov    0x2034ed(%rip),%rax        # 603ff8 <_DYNAMIC+0x1d0>
  400b0b:	48 85 c0             	test   %rax,%rax
  400b0e:	74 05                	je     400b15 <_init+0x15>
  400b10:	e8 db 01 00 00       	callq  400cf0 <socket@plt+0x10>
  400b15:	48 83 c4 08          	add    $0x8,%rsp
  400b19:	c3                   	retq   

Disassembly of section .plt:

0000000000400b20 <getenv@plt-0x10>:
  400b20:	ff 35 e2 34 20 00    	pushq  0x2034e2(%rip)        # 604008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400b26:	ff 25 e4 34 20 00    	jmpq   *0x2034e4(%rip)        # 604010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400b2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400b30 <getenv@plt>:
  400b30:	ff 25 e2 34 20 00    	jmpq   *0x2034e2(%rip)        # 604018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400b36:	68 00 00 00 00       	pushq  $0x0
  400b3b:	e9 e0 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400b40 <strcasecmp@plt>:
  400b40:	ff 25 da 34 20 00    	jmpq   *0x2034da(%rip)        # 604020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400b46:	68 01 00 00 00       	pushq  $0x1
  400b4b:	e9 d0 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400b50 <__errno_location@plt>:
  400b50:	ff 25 d2 34 20 00    	jmpq   *0x2034d2(%rip)        # 604028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400b56:	68 02 00 00 00       	pushq  $0x2
  400b5b:	e9 c0 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400b60 <strcpy@plt>:
  400b60:	ff 25 ca 34 20 00    	jmpq   *0x2034ca(%rip)        # 604030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400b66:	68 03 00 00 00       	pushq  $0x3
  400b6b:	e9 b0 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400b70 <puts@plt>:
  400b70:	ff 25 c2 34 20 00    	jmpq   *0x2034c2(%rip)        # 604038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400b76:	68 04 00 00 00       	pushq  $0x4
  400b7b:	e9 a0 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400b80 <write@plt>:
  400b80:	ff 25 ba 34 20 00    	jmpq   *0x2034ba(%rip)        # 604040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400b86:	68 05 00 00 00       	pushq  $0x5
  400b8b:	e9 90 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400b90 <__stack_chk_fail@plt>:
  400b90:	ff 25 b2 34 20 00    	jmpq   *0x2034b2(%rip)        # 604048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400b96:	68 06 00 00 00       	pushq  $0x6
  400b9b:	e9 80 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400ba0 <alarm@plt>:
  400ba0:	ff 25 aa 34 20 00    	jmpq   *0x2034aa(%rip)        # 604050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400ba6:	68 07 00 00 00       	pushq  $0x7
  400bab:	e9 70 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400bb0 <close@plt>:
  400bb0:	ff 25 a2 34 20 00    	jmpq   *0x2034a2(%rip)        # 604058 <_GLOBAL_OFFSET_TABLE_+0x58>
  400bb6:	68 08 00 00 00       	pushq  $0x8
  400bbb:	e9 60 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400bc0 <read@plt>:
  400bc0:	ff 25 9a 34 20 00    	jmpq   *0x20349a(%rip)        # 604060 <_GLOBAL_OFFSET_TABLE_+0x60>
  400bc6:	68 09 00 00 00       	pushq  $0x9
  400bcb:	e9 50 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400bd0 <__libc_start_main@plt>:
  400bd0:	ff 25 92 34 20 00    	jmpq   *0x203492(%rip)        # 604068 <_GLOBAL_OFFSET_TABLE_+0x68>
  400bd6:	68 0a 00 00 00       	pushq  $0xa
  400bdb:	e9 40 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400be0 <fgets@plt>:
  400be0:	ff 25 8a 34 20 00    	jmpq   *0x20348a(%rip)        # 604070 <_GLOBAL_OFFSET_TABLE_+0x70>
  400be6:	68 0b 00 00 00       	pushq  $0xb
  400beb:	e9 30 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400bf0 <signal@plt>:
  400bf0:	ff 25 82 34 20 00    	jmpq   *0x203482(%rip)        # 604078 <_GLOBAL_OFFSET_TABLE_+0x78>
  400bf6:	68 0c 00 00 00       	pushq  $0xc
  400bfb:	e9 20 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400c00 <gethostbyname@plt>:
  400c00:	ff 25 7a 34 20 00    	jmpq   *0x20347a(%rip)        # 604080 <_GLOBAL_OFFSET_TABLE_+0x80>
  400c06:	68 0d 00 00 00       	pushq  $0xd
  400c0b:	e9 10 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400c10 <__memmove_chk@plt>:
  400c10:	ff 25 72 34 20 00    	jmpq   *0x203472(%rip)        # 604088 <_GLOBAL_OFFSET_TABLE_+0x88>
  400c16:	68 0e 00 00 00       	pushq  $0xe
  400c1b:	e9 00 ff ff ff       	jmpq   400b20 <_init+0x20>

0000000000400c20 <strtol@plt>:
  400c20:	ff 25 6a 34 20 00    	jmpq   *0x20346a(%rip)        # 604090 <_GLOBAL_OFFSET_TABLE_+0x90>
  400c26:	68 0f 00 00 00       	pushq  $0xf
  400c2b:	e9 f0 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400c30 <fflush@plt>:
  400c30:	ff 25 62 34 20 00    	jmpq   *0x203462(%rip)        # 604098 <_GLOBAL_OFFSET_TABLE_+0x98>
  400c36:	68 10 00 00 00       	pushq  $0x10
  400c3b:	e9 e0 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400c40 <__isoc99_sscanf@plt>:
  400c40:	ff 25 5a 34 20 00    	jmpq   *0x20345a(%rip)        # 6040a0 <_GLOBAL_OFFSET_TABLE_+0xa0>
  400c46:	68 11 00 00 00       	pushq  $0x11
  400c4b:	e9 d0 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400c50 <__printf_chk@plt>:
  400c50:	ff 25 52 34 20 00    	jmpq   *0x203452(%rip)        # 6040a8 <_GLOBAL_OFFSET_TABLE_+0xa8>
  400c56:	68 12 00 00 00       	pushq  $0x12
  400c5b:	e9 c0 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400c60 <fopen@plt>:
  400c60:	ff 25 4a 34 20 00    	jmpq   *0x20344a(%rip)        # 6040b0 <_GLOBAL_OFFSET_TABLE_+0xb0>
  400c66:	68 13 00 00 00       	pushq  $0x13
  400c6b:	e9 b0 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400c70 <gethostname@plt>:
  400c70:	ff 25 42 34 20 00    	jmpq   *0x203442(%rip)        # 6040b8 <_GLOBAL_OFFSET_TABLE_+0xb8>
  400c76:	68 14 00 00 00       	pushq  $0x14
  400c7b:	e9 a0 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400c80 <exit@plt>:
  400c80:	ff 25 3a 34 20 00    	jmpq   *0x20343a(%rip)        # 6040c0 <_GLOBAL_OFFSET_TABLE_+0xc0>
  400c86:	68 15 00 00 00       	pushq  $0x15
  400c8b:	e9 90 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400c90 <connect@plt>:
  400c90:	ff 25 32 34 20 00    	jmpq   *0x203432(%rip)        # 6040c8 <_GLOBAL_OFFSET_TABLE_+0xc8>
  400c96:	68 16 00 00 00       	pushq  $0x16
  400c9b:	e9 80 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400ca0 <__fprintf_chk@plt>:
  400ca0:	ff 25 2a 34 20 00    	jmpq   *0x20342a(%rip)        # 6040d0 <_GLOBAL_OFFSET_TABLE_+0xd0>
  400ca6:	68 17 00 00 00       	pushq  $0x17
  400cab:	e9 70 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400cb0 <sleep@plt>:
  400cb0:	ff 25 22 34 20 00    	jmpq   *0x203422(%rip)        # 6040d8 <_GLOBAL_OFFSET_TABLE_+0xd8>
  400cb6:	68 18 00 00 00       	pushq  $0x18
  400cbb:	e9 60 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400cc0 <__ctype_b_loc@plt>:
  400cc0:	ff 25 1a 34 20 00    	jmpq   *0x20341a(%rip)        # 6040e0 <_GLOBAL_OFFSET_TABLE_+0xe0>
  400cc6:	68 19 00 00 00       	pushq  $0x19
  400ccb:	e9 50 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400cd0 <__sprintf_chk@plt>:
  400cd0:	ff 25 12 34 20 00    	jmpq   *0x203412(%rip)        # 6040e8 <_GLOBAL_OFFSET_TABLE_+0xe8>
  400cd6:	68 1a 00 00 00       	pushq  $0x1a
  400cdb:	e9 40 fe ff ff       	jmpq   400b20 <_init+0x20>

0000000000400ce0 <socket@plt>:
  400ce0:	ff 25 0a 34 20 00    	jmpq   *0x20340a(%rip)        # 6040f0 <_GLOBAL_OFFSET_TABLE_+0xf0>
  400ce6:	68 1b 00 00 00       	pushq  $0x1b
  400ceb:	e9 30 fe ff ff       	jmpq   400b20 <_init+0x20>

Disassembly of section .plt.got:

0000000000400cf0 <.plt.got>:
  400cf0:	ff 25 02 33 20 00    	jmpq   *0x203302(%rip)        # 603ff8 <_DYNAMIC+0x1d0>
  400cf6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400d00 <_start>:
  400d00:	31 ed                	xor    %ebp,%ebp
  400d02:	49 89 d1             	mov    %rdx,%r9
  400d05:	5e                   	pop    %rsi
  400d06:	48 89 e2             	mov    %rsp,%rdx
  400d09:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400d0d:	50                   	push   %rax
  400d0e:	54                   	push   %rsp
  400d0f:	49 c7 c0 10 25 40 00 	mov    $0x402510,%r8
  400d16:	48 c7 c1 a0 24 40 00 	mov    $0x4024a0,%rcx
  400d1d:	48 c7 c7 f6 0d 40 00 	mov    $0x400df6,%rdi
  400d24:	e8 a7 fe ff ff       	callq  400bd0 <__libc_start_main@plt>
  400d29:	f4                   	hlt    
  400d2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400d30 <deregister_tm_clones>:
  400d30:	b8 87 47 60 00       	mov    $0x604787,%eax
  400d35:	55                   	push   %rbp
  400d36:	48 2d 80 47 60 00    	sub    $0x604780,%rax
  400d3c:	48 83 f8 0e          	cmp    $0xe,%rax
  400d40:	48 89 e5             	mov    %rsp,%rbp
  400d43:	76 1b                	jbe    400d60 <deregister_tm_clones+0x30>
  400d45:	b8 00 00 00 00       	mov    $0x0,%eax
  400d4a:	48 85 c0             	test   %rax,%rax
  400d4d:	74 11                	je     400d60 <deregister_tm_clones+0x30>
  400d4f:	5d                   	pop    %rbp
  400d50:	bf 80 47 60 00       	mov    $0x604780,%edi
  400d55:	ff e0                	jmpq   *%rax
  400d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400d5e:	00 00 
  400d60:	5d                   	pop    %rbp
  400d61:	c3                   	retq   
  400d62:	0f 1f 40 00          	nopl   0x0(%rax)
  400d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d6d:	00 00 00 

0000000000400d70 <register_tm_clones>:
  400d70:	be 80 47 60 00       	mov    $0x604780,%esi
  400d75:	55                   	push   %rbp
  400d76:	48 81 ee 80 47 60 00 	sub    $0x604780,%rsi
  400d7d:	48 c1 fe 03          	sar    $0x3,%rsi
  400d81:	48 89 e5             	mov    %rsp,%rbp
  400d84:	48 89 f0             	mov    %rsi,%rax
  400d87:	48 c1 e8 3f          	shr    $0x3f,%rax
  400d8b:	48 01 c6             	add    %rax,%rsi
  400d8e:	48 d1 fe             	sar    %rsi
  400d91:	74 15                	je     400da8 <register_tm_clones+0x38>
  400d93:	b8 00 00 00 00       	mov    $0x0,%eax
  400d98:	48 85 c0             	test   %rax,%rax
  400d9b:	74 0b                	je     400da8 <register_tm_clones+0x38>
  400d9d:	5d                   	pop    %rbp
  400d9e:	bf 80 47 60 00       	mov    $0x604780,%edi
  400da3:	ff e0                	jmpq   *%rax
  400da5:	0f 1f 00             	nopl   (%rax)
  400da8:	5d                   	pop    %rbp
  400da9:	c3                   	retq   
  400daa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400db0 <__do_global_dtors_aux>:
  400db0:	80 3d f1 39 20 00 00 	cmpb   $0x0,0x2039f1(%rip)        # 6047a8 <completed.7594>
  400db7:	75 11                	jne    400dca <__do_global_dtors_aux+0x1a>
  400db9:	55                   	push   %rbp
  400dba:	48 89 e5             	mov    %rsp,%rbp
  400dbd:	e8 6e ff ff ff       	callq  400d30 <deregister_tm_clones>
  400dc2:	5d                   	pop    %rbp
  400dc3:	c6 05 de 39 20 00 01 	movb   $0x1,0x2039de(%rip)        # 6047a8 <completed.7594>
  400dca:	f3 c3                	repz retq 
  400dcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400dd0 <frame_dummy>:
  400dd0:	bf 20 3e 60 00       	mov    $0x603e20,%edi
  400dd5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400dd9:	75 05                	jne    400de0 <frame_dummy+0x10>
  400ddb:	eb 93                	jmp    400d70 <register_tm_clones>
  400ddd:	0f 1f 00             	nopl   (%rax)
  400de0:	b8 00 00 00 00       	mov    $0x0,%eax
  400de5:	48 85 c0             	test   %rax,%rax
  400de8:	74 f1                	je     400ddb <frame_dummy+0xb>
  400dea:	55                   	push   %rbp
  400deb:	48 89 e5             	mov    %rsp,%rbp
  400dee:	ff d0                	callq  *%rax
  400df0:	5d                   	pop    %rbp
  400df1:	e9 7a ff ff ff       	jmpq   400d70 <register_tm_clones>

0000000000400df6 <main>:
 */

FILE *infile;

int main(int argc, char *argv[])
{
  400df6:	53                   	push   %rbx
    /* Note to self: remember to port this bomb to Windows and put a 
     * fantastic GUI on it. */

    /* When run with no arguments, the bomb reads its input lines 
     * from standard input. */
    if (argc == 1) {  
  400df7:	83 ff 01             	cmp    $0x1,%edi
  400dfa:	75 10                	jne    400e0c <main+0x16>
	infile = stdin;
  400dfc:	48 8b 05 8d 39 20 00 	mov    0x20398d(%rip),%rax        # 604790 <stdin@@GLIBC_2.2.5>
  400e03:	48 89 05 a6 39 20 00 	mov    %rax,0x2039a6(%rip)        # 6047b0 <infile>
  400e0a:	eb 63                	jmp    400e6f <main+0x79>
  400e0c:	48 89 f3             	mov    %rsi,%rbx

    /* When run with one argument <file>, the bomb reads from <file> 
     * until EOF, and then switches to standard input. Thus, as you 
     * defuse each phase, you can add its defusing string to <file> and
     * avoid having to retype it. */
    else if (argc == 2) {
  400e0f:	83 ff 02             	cmp    $0x2,%edi
  400e12:	75 3a                	jne    400e4e <main+0x58>
	if (!(infile = fopen(argv[1], "r"))) {
  400e14:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400e18:	be 24 25 40 00       	mov    $0x402524,%esi
  400e1d:	e8 3e fe ff ff       	callq  400c60 <fopen@plt>
  400e22:	48 89 05 87 39 20 00 	mov    %rax,0x203987(%rip)        # 6047b0 <infile>
  400e29:	48 85 c0             	test   %rax,%rax
  400e2c:	75 41                	jne    400e6f <main+0x79>
}

__fortify_function int
printf (const char *__restrict __fmt, ...)
{
  return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
  400e2e:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
  400e32:	48 8b 13             	mov    (%rbx),%rdx
  400e35:	be 26 25 40 00       	mov    $0x402526,%esi
  400e3a:	bf 01 00 00 00       	mov    $0x1,%edi
  400e3f:	e8 0c fe ff ff       	callq  400c50 <__printf_chk@plt>
	    printf("%s: Error: Couldn't open %s\n", argv[0], argv[1]);
	    exit(8);
  400e44:	bf 08 00 00 00       	mov    $0x8,%edi
  400e49:	e8 32 fe ff ff       	callq  400c80 <exit@plt>
  400e4e:	48 8b 16             	mov    (%rsi),%rdx
  400e51:	be 43 25 40 00       	mov    $0x402543,%esi
  400e56:	bf 01 00 00 00       	mov    $0x1,%edi
  400e5b:	b8 00 00 00 00       	mov    $0x0,%eax
  400e60:	e8 eb fd ff ff       	callq  400c50 <__printf_chk@plt>
    }

    /* You can't call the bomb with more than 1 command line argument. */
    else {
	printf("Usage: %s [<input_file>]\n", argv[0]);
	exit(8);
  400e65:	bf 08 00 00 00       	mov    $0x8,%edi
  400e6a:	e8 11 fe ff ff       	callq  400c80 <exit@plt>
    }

    /* Do all sorts of secret stuff that makes the bomb harder to defuse. */
    initialize_bomb();
  400e6f:	e8 d8 05 00 00       	callq  40144c <initialize_bomb>
  400e74:	bf a8 25 40 00       	mov    $0x4025a8,%edi
  400e79:	e8 f2 fc ff ff       	callq  400b70 <puts@plt>
  400e7e:	bf e8 25 40 00       	mov    $0x4025e8,%edi
  400e83:	e8 e8 fc ff ff       	callq  400b70 <puts@plt>

    printf("Welcome to my fiendish little bomb. You have 6 phases with\n");
    printf("which to blow yourself up. Have a nice day!\n");

    /* Hmm...  Six phases must be more secure than one phase! */
    input = read_line();             /* Get input                   */
  400e88:	e8 a1 08 00 00       	callq  40172e <read_line>
    phase_1(input);                  /* Run the phase               */
  400e8d:	48 89 c7             	mov    %rax,%rdi
  400e90:	e8 98 00 00 00       	callq  400f2d <phase_1>
    phase_defused();                 /* Drat!  They figured it out!
  400e95:	e8 ba 09 00 00       	callq  401854 <phase_defused>
  400e9a:	bf 18 26 40 00       	mov    $0x402618,%edi
  400e9f:	e8 cc fc ff ff       	callq  400b70 <puts@plt>
				      * Let me know how they did it. */
    printf("Phase 1 defused. How about the next one?\n");

    /* The second phase is harder.  No one will ever figure out
     * how to defuse this... */
    input = read_line();
  400ea4:	e8 85 08 00 00       	callq  40172e <read_line>
    phase_2(input);
  400ea9:	48 89 c7             	mov    %rax,%rdi
  400eac:	e8 98 00 00 00       	callq  400f49 <phase_2>
    phase_defused();
  400eb1:	e8 9e 09 00 00       	callq  401854 <phase_defused>
  400eb6:	bf 5d 25 40 00       	mov    $0x40255d,%edi
  400ebb:	e8 b0 fc ff ff       	callq  400b70 <puts@plt>
    printf("That's number 2.  Keep going!\n");

    /* I guess this is too easy so far.  Some more complex code will
     * confuse people. */
    input = read_line();
  400ec0:	e8 69 08 00 00       	callq  40172e <read_line>
    phase_3(input);
  400ec5:	48 89 c7             	mov    %rax,%rdi
  400ec8:	e8 e8 00 00 00       	callq  400fb5 <phase_3>
    phase_defused();
  400ecd:	e8 82 09 00 00       	callq  401854 <phase_defused>
  400ed2:	bf 7b 25 40 00       	mov    $0x40257b,%edi
  400ed7:	e8 94 fc ff ff       	callq  400b70 <puts@plt>
    printf("Halfway there!\n");

    /* Oh yeah?  Well, how good is your math?  Try on this saucy problem! */
    input = read_line();
  400edc:	e8 4d 08 00 00       	callq  40172e <read_line>
    phase_4(input);
  400ee1:	48 89 c7             	mov    %rax,%rdi
  400ee4:	e8 da 01 00 00       	callq  4010c3 <phase_4>
    phase_defused();
  400ee9:	e8 66 09 00 00       	callq  401854 <phase_defused>
  400eee:	bf 48 26 40 00       	mov    $0x402648,%edi
  400ef3:	e8 78 fc ff ff       	callq  400b70 <puts@plt>
    printf("So you got that one.  Try this one.\n");
    
    /* Round and 'round in memory we go, where we stop, the bomb blows! */
    input = read_line();
  400ef8:	e8 31 08 00 00       	callq  40172e <read_line>
    phase_5(input);
  400efd:	48 89 c7             	mov    %rax,%rdi
  400f00:	e8 31 02 00 00       	callq  401136 <phase_5>
    phase_defused();
  400f05:	e8 4a 09 00 00       	callq  401854 <phase_defused>
  400f0a:	bf 8a 25 40 00       	mov    $0x40258a,%edi
  400f0f:	e8 5c fc ff ff       	callq  400b70 <puts@plt>
    printf("Good work!  On to the next...\n");

    /* This phase will never be used, since no one will get past the
     * earlier ones.  But just in case, make this one extra hard. */
    input = read_line();
  400f14:	e8 15 08 00 00       	callq  40172e <read_line>
    phase_6(input);
  400f19:	48 89 c7             	mov    %rax,%rdi
  400f1c:	e8 92 02 00 00       	callq  4011b3 <phase_6>
    phase_defused();
  400f21:	e8 2e 09 00 00       	callq  401854 <phase_defused>

    /* Wow, they got it!  But isn't something... missing?  Perhaps
     * something they overlooked?  Mua ha ha ha ha! */
    
    return 0;
}
  400f26:	b8 00 00 00 00       	mov    $0x0,%eax
  400f2b:	5b                   	pop    %rbx
  400f2c:	c3                   	retq   

0000000000400f2d <phase_1>:
  400f2d:	48 83 ec 08          	sub    $0x8,%rsp
  400f31:	be 70 26 40 00       	mov    $0x402670,%esi
  400f36:	e8 aa 04 00 00       	callq  4013e5 <strings_not_equal>
  400f3b:	85 c0                	test   %eax,%eax
  400f3d:	74 05                	je     400f44 <phase_1+0x17>
  400f3f:	e8 75 07 00 00       	callq  4016b9 <explode_bomb>
  400f44:	48 83 c4 08          	add    $0x8,%rsp
  400f48:	c3                   	retq   

0000000000400f49 <phase_2>:
  400f49:	55                   	push   %rbp
  400f4a:	53                   	push   %rbx
  400f4b:	48 83 ec 28          	sub    $0x28,%rsp
  400f4f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400f56:	00 00 
  400f58:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  400f5d:	31 c0                	xor    %eax,%eax
  400f5f:	48 89 e6             	mov    %rsp,%rsi
  400f62:	e8 88 07 00 00       	callq  4016ef <read_six_numbers>
  400f67:	83 3c 24 00          	cmpl   $0x0,(%rsp)
  400f6b:	75 07                	jne    400f74 <phase_2+0x2b>
  400f6d:	83 7c 24 04 01       	cmpl   $0x1,0x4(%rsp)
  400f72:	74 05                	je     400f79 <phase_2+0x30>
  400f74:	e8 40 07 00 00       	callq  4016b9 <explode_bomb>
  400f79:	48 89 e3             	mov    %rsp,%rbx
  400f7c:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
  400f81:	8b 43 04             	mov    0x4(%rbx),%eax
  400f84:	03 03                	add    (%rbx),%eax
  400f86:	39 43 08             	cmp    %eax,0x8(%rbx)
  400f89:	74 05                	je     400f90 <phase_2+0x47>
  400f8b:	e8 29 07 00 00       	callq  4016b9 <explode_bomb>
  400f90:	48 83 c3 04          	add    $0x4,%rbx
  400f94:	48 39 eb             	cmp    %rbp,%rbx
  400f97:	75 e8                	jne    400f81 <phase_2+0x38>
  400f99:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  400f9e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  400fa5:	00 00 
  400fa7:	74 05                	je     400fae <phase_2+0x65>
  400fa9:	e8 e2 fb ff ff       	callq  400b90 <__stack_chk_fail@plt>
  400fae:	48 83 c4 28          	add    $0x28,%rsp
  400fb2:	5b                   	pop    %rbx
  400fb3:	5d                   	pop    %rbp
  400fb4:	c3                   	retq   

0000000000400fb5 <phase_3>:
  400fb5:	48 83 ec 18          	sub    $0x18,%rsp
  400fb9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400fc0:	00 00 
  400fc2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  400fc7:	31 c0                	xor    %eax,%eax
  400fc9:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
  400fce:	48 89 e2             	mov    %rsp,%rdx
  400fd1:	be 6d 29 40 00       	mov    $0x40296d,%esi
  400fd6:	e8 65 fc ff ff       	callq  400c40 <__isoc99_sscanf@plt>
  400fdb:	83 f8 01             	cmp    $0x1,%eax
  400fde:	7f 05                	jg     400fe5 <phase_3+0x30>
  400fe0:	e8 d4 06 00 00       	callq  4016b9 <explode_bomb>
  400fe5:	83 3c 24 07          	cmpl   $0x7,(%rsp)
  400fe9:	77 65                	ja     401050 <phase_3+0x9b>
  400feb:	8b 04 24             	mov    (%rsp),%eax
  400fee:	ff 24 c5 d0 26 40 00 	jmpq   *0x4026d0(,%rax,8)
  400ff5:	b8 05 03 00 00       	mov    $0x305,%eax
  400ffa:	eb 05                	jmp    401001 <phase_3+0x4c>
  400ffc:	b8 00 00 00 00       	mov    $0x0,%eax
  401001:	2d 6b 01 00 00       	sub    $0x16b,%eax
  401006:	eb 05                	jmp    40100d <phase_3+0x58>
  401008:	b8 00 00 00 00       	mov    $0x0,%eax
  40100d:	05 e0 00 00 00       	add    $0xe0,%eax
  401012:	eb 05                	jmp    401019 <phase_3+0x64>
  401014:	b8 00 00 00 00       	mov    $0x0,%eax
  401019:	2d 72 03 00 00       	sub    $0x372,%eax
  40101e:	eb 05                	jmp    401025 <phase_3+0x70>
  401020:	b8 00 00 00 00       	mov    $0x0,%eax
  401025:	05 72 03 00 00       	add    $0x372,%eax
  40102a:	eb 05                	jmp    401031 <phase_3+0x7c>
  40102c:	b8 00 00 00 00       	mov    $0x0,%eax
  401031:	2d 72 03 00 00       	sub    $0x372,%eax
  401036:	eb 05                	jmp    40103d <phase_3+0x88>
  401038:	b8 00 00 00 00       	mov    $0x0,%eax
  40103d:	05 72 03 00 00       	add    $0x372,%eax
  401042:	eb 05                	jmp    401049 <phase_3+0x94>
  401044:	b8 00 00 00 00       	mov    $0x0,%eax
  401049:	2d 72 03 00 00       	sub    $0x372,%eax
  40104e:	eb 0a                	jmp    40105a <phase_3+0xa5>
  401050:	e8 64 06 00 00       	callq  4016b9 <explode_bomb>
  401055:	b8 00 00 00 00       	mov    $0x0,%eax
  40105a:	83 3c 24 05          	cmpl   $0x5,(%rsp)
  40105e:	7f 06                	jg     401066 <phase_3+0xb1>
  401060:	3b 44 24 04          	cmp    0x4(%rsp),%eax
  401064:	74 05                	je     40106b <phase_3+0xb6>
  401066:	e8 4e 06 00 00       	callq  4016b9 <explode_bomb>
  40106b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  401070:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  401077:	00 00 
  401079:	74 05                	je     401080 <phase_3+0xcb>
  40107b:	e8 10 fb ff ff       	callq  400b90 <__stack_chk_fail@plt>
  401080:	48 83 c4 18          	add    $0x18,%rsp
  401084:	c3                   	retq   

0000000000401085 <func4>:
  401085:	48 83 ec 08          	sub    $0x8,%rsp
  401089:	89 d0                	mov    %edx,%eax
  40108b:	29 f0                	sub    %esi,%eax
  40108d:	89 c1                	mov    %eax,%ecx
  40108f:	c1 e9 1f             	shr    $0x1f,%ecx
  401092:	01 c8                	add    %ecx,%eax
  401094:	d1 f8                	sar    %eax
  401096:	8d 0c 30             	lea    (%rax,%rsi,1),%ecx
  401099:	39 f9                	cmp    %edi,%ecx
  40109b:	7e 0c                	jle    4010a9 <func4+0x24>
  40109d:	8d 51 ff             	lea    -0x1(%rcx),%edx
  4010a0:	e8 e0 ff ff ff       	callq  401085 <func4>
  4010a5:	01 c0                	add    %eax,%eax
  4010a7:	eb 15                	jmp    4010be <func4+0x39>
  4010a9:	b8 00 00 00 00       	mov    $0x0,%eax
  4010ae:	39 f9                	cmp    %edi,%ecx
  4010b0:	7d 0c                	jge    4010be <func4+0x39>
  4010b2:	8d 71 01             	lea    0x1(%rcx),%esi
  4010b5:	e8 cb ff ff ff       	callq  401085 <func4>
  4010ba:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
  4010be:	48 83 c4 08          	add    $0x8,%rsp
  4010c2:	c3                   	retq   

00000000004010c3 <phase_4>:
  4010c3:	48 83 ec 18          	sub    $0x18,%rsp
  4010c7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4010ce:	00 00 
  4010d0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4010d5:	31 c0                	xor    %eax,%eax
  4010d7:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
  4010dc:	48 89 e2             	mov    %rsp,%rdx
  4010df:	be 6d 29 40 00       	mov    $0x40296d,%esi
  4010e4:	e8 57 fb ff ff       	callq  400c40 <__isoc99_sscanf@plt>
  4010e9:	83 f8 02             	cmp    $0x2,%eax
  4010ec:	75 06                	jne    4010f4 <phase_4+0x31>
  4010ee:	83 3c 24 0e          	cmpl   $0xe,(%rsp)
  4010f2:	76 05                	jbe    4010f9 <phase_4+0x36>
  4010f4:	e8 c0 05 00 00       	callq  4016b9 <explode_bomb>
  4010f9:	ba 0e 00 00 00       	mov    $0xe,%edx
  4010fe:	be 00 00 00 00       	mov    $0x0,%esi
  401103:	8b 3c 24             	mov    (%rsp),%edi
  401106:	e8 7a ff ff ff       	callq  401085 <func4>
  40110b:	83 f8 05             	cmp    $0x5,%eax
  40110e:	75 07                	jne    401117 <phase_4+0x54>
  401110:	83 7c 24 04 05       	cmpl   $0x5,0x4(%rsp)
  401115:	74 05                	je     40111c <phase_4+0x59>
  401117:	e8 9d 05 00 00       	callq  4016b9 <explode_bomb>
  40111c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  401121:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  401128:	00 00 
  40112a:	74 05                	je     401131 <phase_4+0x6e>
  40112c:	e8 5f fa ff ff       	callq  400b90 <__stack_chk_fail@plt>
  401131:	48 83 c4 18          	add    $0x18,%rsp
  401135:	c3                   	retq   

0000000000401136 <phase_5>:
  401136:	53                   	push   %rbx
  401137:	48 83 ec 10          	sub    $0x10,%rsp
  40113b:	48 89 fb             	mov    %rdi,%rbx
  40113e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401145:	00 00 
  401147:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  40114c:	31 c0                	xor    %eax,%eax
  40114e:	e8 74 02 00 00       	callq  4013c7 <string_length>
  401153:	83 f8 06             	cmp    $0x6,%eax
  401156:	74 05                	je     40115d <phase_5+0x27>
  401158:	e8 5c 05 00 00       	callq  4016b9 <explode_bomb>
  40115d:	b8 00 00 00 00       	mov    $0x0,%eax
  401162:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
  401166:	83 e2 0f             	and    $0xf,%edx
  401169:	0f b6 92 10 27 40 00 	movzbl 0x402710(%rdx),%edx
  401170:	88 14 04             	mov    %dl,(%rsp,%rax,1)
  401173:	48 83 c0 01          	add    $0x1,%rax
  401177:	48 83 f8 06          	cmp    $0x6,%rax
  40117b:	75 e5                	jne    401162 <phase_5+0x2c>
  40117d:	c6 44 24 06 00       	movb   $0x0,0x6(%rsp)
  401182:	be c6 26 40 00       	mov    $0x4026c6,%esi
  401187:	48 89 e7             	mov    %rsp,%rdi
  40118a:	e8 56 02 00 00       	callq  4013e5 <strings_not_equal>
  40118f:	85 c0                	test   %eax,%eax
  401191:	74 05                	je     401198 <phase_5+0x62>
  401193:	e8 21 05 00 00       	callq  4016b9 <explode_bomb>
  401198:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  40119d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4011a4:	00 00 
  4011a6:	74 05                	je     4011ad <phase_5+0x77>
  4011a8:	e8 e3 f9 ff ff       	callq  400b90 <__stack_chk_fail@plt>
  4011ad:	48 83 c4 10          	add    $0x10,%rsp
  4011b1:	5b                   	pop    %rbx
  4011b2:	c3                   	retq   

00000000004011b3 <phase_6>:
  4011b3:	41 55                	push   %r13
  4011b5:	41 54                	push   %r12
  4011b7:	55                   	push   %rbp
  4011b8:	53                   	push   %rbx
  4011b9:	48 83 ec 68          	sub    $0x68,%rsp
  4011bd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4011c4:	00 00 
  4011c6:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  4011cb:	31 c0                	xor    %eax,%eax
  4011cd:	48 89 e6             	mov    %rsp,%rsi
  4011d0:	e8 1a 05 00 00       	callq  4016ef <read_six_numbers>
  4011d5:	49 89 e4             	mov    %rsp,%r12
  4011d8:	41 bd 00 00 00 00    	mov    $0x0,%r13d
  4011de:	4c 89 e5             	mov    %r12,%rbp
  4011e1:	41 8b 04 24          	mov    (%r12),%eax
  4011e5:	83 e8 01             	sub    $0x1,%eax
  4011e8:	83 f8 05             	cmp    $0x5,%eax
  4011eb:	76 05                	jbe    4011f2 <phase_6+0x3f>
  4011ed:	e8 c7 04 00 00       	callq  4016b9 <explode_bomb>
  4011f2:	41 83 c5 01          	add    $0x1,%r13d
  4011f6:	41 83 fd 06          	cmp    $0x6,%r13d
  4011fa:	74 3d                	je     401239 <phase_6+0x86>
  4011fc:	44 89 eb             	mov    %r13d,%ebx
  4011ff:	48 63 c3             	movslq %ebx,%rax
  401202:	8b 04 84             	mov    (%rsp,%rax,4),%eax
  401205:	39 45 00             	cmp    %eax,0x0(%rbp)
  401208:	75 05                	jne    40120f <phase_6+0x5c>
  40120a:	e8 aa 04 00 00       	callq  4016b9 <explode_bomb>
  40120f:	83 c3 01             	add    $0x1,%ebx
  401212:	83 fb 05             	cmp    $0x5,%ebx
  401215:	7e e8                	jle    4011ff <phase_6+0x4c>
  401217:	49 83 c4 04          	add    $0x4,%r12
  40121b:	eb c1                	jmp    4011de <phase_6+0x2b>
  40121d:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  401221:	83 c0 01             	add    $0x1,%eax
  401224:	39 c8                	cmp    %ecx,%eax
  401226:	75 f5                	jne    40121d <phase_6+0x6a>
  401228:	48 89 54 74 20       	mov    %rdx,0x20(%rsp,%rsi,2)
  40122d:	48 83 c6 04          	add    $0x4,%rsi
  401231:	48 83 fe 18          	cmp    $0x18,%rsi
  401235:	75 07                	jne    40123e <phase_6+0x8b>
  401237:	eb 19                	jmp    401252 <phase_6+0x9f>
  401239:	be 00 00 00 00       	mov    $0x0,%esi
  40123e:	8b 0c 34             	mov    (%rsp,%rsi,1),%ecx
  401241:	b8 01 00 00 00       	mov    $0x1,%eax
  401246:	ba f0 42 60 00       	mov    $0x6042f0,%edx
  40124b:	83 f9 01             	cmp    $0x1,%ecx
  40124e:	7f cd                	jg     40121d <phase_6+0x6a>
  401250:	eb d6                	jmp    401228 <phase_6+0x75>
  401252:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
  401257:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
  40125c:	48 8d 74 24 48       	lea    0x48(%rsp),%rsi
  401261:	48 89 d9             	mov    %rbx,%rcx
  401264:	48 8b 50 08          	mov    0x8(%rax),%rdx
  401268:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  40126c:	48 83 c0 08          	add    $0x8,%rax
  401270:	48 89 d1             	mov    %rdx,%rcx
  401273:	48 39 f0             	cmp    %rsi,%rax
  401276:	75 ec                	jne    401264 <phase_6+0xb1>
  401278:	48 c7 42 08 00 00 00 	movq   $0x0,0x8(%rdx)
  40127f:	00 
  401280:	bd 05 00 00 00       	mov    $0x5,%ebp
  401285:	48 8b 43 08          	mov    0x8(%rbx),%rax
  401289:	8b 00                	mov    (%rax),%eax
  40128b:	39 03                	cmp    %eax,(%rbx)
  40128d:	7e 05                	jle    401294 <phase_6+0xe1>
  40128f:	e8 25 04 00 00       	callq  4016b9 <explode_bomb>
  401294:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
  401298:	83 ed 01             	sub    $0x1,%ebp
  40129b:	75 e8                	jne    401285 <phase_6+0xd2>
  40129d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
  4012a2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4012a9:	00 00 
  4012ab:	74 05                	je     4012b2 <phase_6+0xff>
  4012ad:	e8 de f8 ff ff       	callq  400b90 <__stack_chk_fail@plt>
  4012b2:	48 83 c4 68          	add    $0x68,%rsp
  4012b6:	5b                   	pop    %rbx
  4012b7:	5d                   	pop    %rbp
  4012b8:	41 5c                	pop    %r12
  4012ba:	41 5d                	pop    %r13
  4012bc:	c3                   	retq   

00000000004012bd <fun7>:
  4012bd:	48 83 ec 08          	sub    $0x8,%rsp
  4012c1:	48 85 ff             	test   %rdi,%rdi
  4012c4:	74 2b                	je     4012f1 <fun7+0x34>
  4012c6:	8b 17                	mov    (%rdi),%edx
  4012c8:	39 f2                	cmp    %esi,%edx
  4012ca:	7e 0d                	jle    4012d9 <fun7+0x1c>
  4012cc:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  4012d0:	e8 e8 ff ff ff       	callq  4012bd <fun7>
  4012d5:	01 c0                	add    %eax,%eax
  4012d7:	eb 1d                	jmp    4012f6 <fun7+0x39>
  4012d9:	b8 00 00 00 00       	mov    $0x0,%eax
  4012de:	39 f2                	cmp    %esi,%edx
  4012e0:	74 14                	je     4012f6 <fun7+0x39>
  4012e2:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
  4012e6:	e8 d2 ff ff ff       	callq  4012bd <fun7>
  4012eb:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
  4012ef:	eb 05                	jmp    4012f6 <fun7+0x39>
  4012f1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4012f6:	48 83 c4 08          	add    $0x8,%rsp
  4012fa:	c3                   	retq   

00000000004012fb <secret_phase>:
  4012fb:	53                   	push   %rbx
  4012fc:	e8 2d 04 00 00       	callq  40172e <read_line>
  401301:	ba 0a 00 00 00       	mov    $0xa,%edx
  401306:	be 00 00 00 00       	mov    $0x0,%esi
  40130b:	48 89 c7             	mov    %rax,%rdi
  40130e:	e8 0d f9 ff ff       	callq  400c20 <strtol@plt>
  401313:	48 89 c3             	mov    %rax,%rbx
  401316:	8d 40 ff             	lea    -0x1(%rax),%eax
  401319:	3d e8 03 00 00       	cmp    $0x3e8,%eax
  40131e:	76 05                	jbe    401325 <secret_phase+0x2a>
  401320:	e8 94 03 00 00       	callq  4016b9 <explode_bomb>
  401325:	89 de                	mov    %ebx,%esi
  401327:	bf 10 41 60 00       	mov    $0x604110,%edi
  40132c:	e8 8c ff ff ff       	callq  4012bd <fun7>
  401331:	83 f8 01             	cmp    $0x1,%eax
  401334:	74 05                	je     40133b <secret_phase+0x40>
  401336:	e8 7e 03 00 00       	callq  4016b9 <explode_bomb>
  40133b:	bf a0 26 40 00       	mov    $0x4026a0,%edi
  401340:	e8 2b f8 ff ff       	callq  400b70 <puts@plt>
  401345:	e8 0a 05 00 00       	callq  401854 <phase_defused>
  40134a:	5b                   	pop    %rbx
  40134b:	c3                   	retq   

000000000040134c <sig_handler>:
  40134c:	48 83 ec 08          	sub    $0x8,%rsp
  401350:	bf 20 27 40 00       	mov    $0x402720,%edi
  401355:	e8 16 f8 ff ff       	callq  400b70 <puts@plt>
  40135a:	bf 03 00 00 00       	mov    $0x3,%edi
  40135f:	e8 4c f9 ff ff       	callq  400cb0 <sleep@plt>
  401364:	be e9 28 40 00       	mov    $0x4028e9,%esi
  401369:	bf 01 00 00 00       	mov    $0x1,%edi
  40136e:	b8 00 00 00 00       	mov    $0x0,%eax
  401373:	e8 d8 f8 ff ff       	callq  400c50 <__printf_chk@plt>
  401378:	48 8b 3d 01 34 20 00 	mov    0x203401(%rip),%rdi        # 604780 <__TMC_END__>
  40137f:	e8 ac f8 ff ff       	callq  400c30 <fflush@plt>
  401384:	bf 01 00 00 00       	mov    $0x1,%edi
  401389:	e8 22 f9 ff ff       	callq  400cb0 <sleep@plt>
  40138e:	bf f1 28 40 00       	mov    $0x4028f1,%edi
  401393:	e8 d8 f7 ff ff       	callq  400b70 <puts@plt>
  401398:	bf 10 00 00 00       	mov    $0x10,%edi
  40139d:	e8 de f8 ff ff       	callq  400c80 <exit@plt>

00000000004013a2 <invalid_phase>:
  4013a2:	48 83 ec 08          	sub    $0x8,%rsp
  4013a6:	48 89 fa             	mov    %rdi,%rdx
  4013a9:	be f9 28 40 00       	mov    $0x4028f9,%esi
  4013ae:	bf 01 00 00 00       	mov    $0x1,%edi
  4013b3:	b8 00 00 00 00       	mov    $0x0,%eax
  4013b8:	e8 93 f8 ff ff       	callq  400c50 <__printf_chk@plt>
  4013bd:	bf 08 00 00 00       	mov    $0x8,%edi
  4013c2:	e8 b9 f8 ff ff       	callq  400c80 <exit@plt>

00000000004013c7 <string_length>:
  4013c7:	80 3f 00             	cmpb   $0x0,(%rdi)
  4013ca:	74 13                	je     4013df <string_length+0x18>
  4013cc:	b8 00 00 00 00       	mov    $0x0,%eax
  4013d1:	48 83 c7 01          	add    $0x1,%rdi
  4013d5:	83 c0 01             	add    $0x1,%eax
  4013d8:	80 3f 00             	cmpb   $0x0,(%rdi)
  4013db:	75 f4                	jne    4013d1 <string_length+0xa>
  4013dd:	f3 c3                	repz retq 
  4013df:	b8 00 00 00 00       	mov    $0x0,%eax
  4013e4:	c3                   	retq   

00000000004013e5 <strings_not_equal>:
  4013e5:	41 54                	push   %r12
  4013e7:	55                   	push   %rbp
  4013e8:	53                   	push   %rbx
  4013e9:	48 89 fb             	mov    %rdi,%rbx
  4013ec:	48 89 f5             	mov    %rsi,%rbp
  4013ef:	e8 d3 ff ff ff       	callq  4013c7 <string_length>
  4013f4:	41 89 c4             	mov    %eax,%r12d
  4013f7:	48 89 ef             	mov    %rbp,%rdi
  4013fa:	e8 c8 ff ff ff       	callq  4013c7 <string_length>
  4013ff:	ba 01 00 00 00       	mov    $0x1,%edx
  401404:	41 39 c4             	cmp    %eax,%r12d
  401407:	75 3c                	jne    401445 <strings_not_equal+0x60>
  401409:	0f b6 03             	movzbl (%rbx),%eax
  40140c:	84 c0                	test   %al,%al
  40140e:	74 22                	je     401432 <strings_not_equal+0x4d>
  401410:	3a 45 00             	cmp    0x0(%rbp),%al
  401413:	74 07                	je     40141c <strings_not_equal+0x37>
  401415:	eb 22                	jmp    401439 <strings_not_equal+0x54>
  401417:	3a 45 00             	cmp    0x0(%rbp),%al
  40141a:	75 24                	jne    401440 <strings_not_equal+0x5b>
  40141c:	48 83 c3 01          	add    $0x1,%rbx
  401420:	48 83 c5 01          	add    $0x1,%rbp
  401424:	0f b6 03             	movzbl (%rbx),%eax
  401427:	84 c0                	test   %al,%al
  401429:	75 ec                	jne    401417 <strings_not_equal+0x32>
  40142b:	ba 00 00 00 00       	mov    $0x0,%edx
  401430:	eb 13                	jmp    401445 <strings_not_equal+0x60>
  401432:	ba 00 00 00 00       	mov    $0x0,%edx
  401437:	eb 0c                	jmp    401445 <strings_not_equal+0x60>
  401439:	ba 01 00 00 00       	mov    $0x1,%edx
  40143e:	eb 05                	jmp    401445 <strings_not_equal+0x60>
  401440:	ba 01 00 00 00       	mov    $0x1,%edx
  401445:	89 d0                	mov    %edx,%eax
  401447:	5b                   	pop    %rbx
  401448:	5d                   	pop    %rbp
  401449:	41 5c                	pop    %r12
  40144b:	c3                   	retq   

000000000040144c <initialize_bomb>:
  40144c:	53                   	push   %rbx
  40144d:	48 81 ec 50 20 00 00 	sub    $0x2050,%rsp
  401454:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40145b:	00 00 
  40145d:	48 89 84 24 48 20 00 	mov    %rax,0x2048(%rsp)
  401464:	00 
  401465:	31 c0                	xor    %eax,%eax
  401467:	be 4c 13 40 00       	mov    $0x40134c,%esi
  40146c:	bf 02 00 00 00       	mov    $0x2,%edi
  401471:	e8 7a f7 ff ff       	callq  400bf0 <signal@plt>
  401476:	be 40 00 00 00       	mov    $0x40,%esi
  40147b:	48 89 e7             	mov    %rsp,%rdi
  40147e:	e8 ed f7 ff ff       	callq  400c70 <gethostname@plt>
  401483:	85 c0                	test   %eax,%eax
  401485:	75 13                	jne    40149a <initialize_bomb+0x4e>
  401487:	48 8b 3d f2 2e 20 00 	mov    0x202ef2(%rip),%rdi        # 604380 <host_table>
  40148e:	bb 88 43 60 00       	mov    $0x604388,%ebx
  401493:	48 85 ff             	test   %rdi,%rdi
  401496:	75 16                	jne    4014ae <initialize_bomb+0x62>
  401498:	eb 52                	jmp    4014ec <initialize_bomb+0xa0>
  40149a:	bf 58 27 40 00       	mov    $0x402758,%edi
  40149f:	e8 cc f6 ff ff       	callq  400b70 <puts@plt>
  4014a4:	bf 08 00 00 00       	mov    $0x8,%edi
  4014a9:	e8 d2 f7 ff ff       	callq  400c80 <exit@plt>
  4014ae:	48 89 e6             	mov    %rsp,%rsi
  4014b1:	e8 8a f6 ff ff       	callq  400b40 <strcasecmp@plt>
  4014b6:	85 c0                	test   %eax,%eax
  4014b8:	74 46                	je     401500 <initialize_bomb+0xb4>
  4014ba:	48 83 c3 08          	add    $0x8,%rbx
  4014be:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
  4014c2:	48 85 ff             	test   %rdi,%rdi
  4014c5:	75 e7                	jne    4014ae <initialize_bomb+0x62>
  4014c7:	eb 23                	jmp    4014ec <initialize_bomb+0xa0>
  4014c9:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
  4014ce:	be 0a 29 40 00       	mov    $0x40290a,%esi
  4014d3:	bf 01 00 00 00       	mov    $0x1,%edi
  4014d8:	b8 00 00 00 00       	mov    $0x0,%eax
  4014dd:	e8 6e f7 ff ff       	callq  400c50 <__printf_chk@plt>
  4014e2:	bf 08 00 00 00       	mov    $0x8,%edi
  4014e7:	e8 94 f7 ff ff       	callq  400c80 <exit@plt>
  4014ec:	bf 90 27 40 00       	mov    $0x402790,%edi
  4014f1:	e8 7a f6 ff ff       	callq  400b70 <puts@plt>
  4014f6:	bf 08 00 00 00       	mov    $0x8,%edi
  4014fb:	e8 80 f7 ff ff       	callq  400c80 <exit@plt>
  401500:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  401505:	e8 49 0d 00 00       	callq  402253 <init_driver>
  40150a:	85 c0                	test   %eax,%eax
  40150c:	78 bb                	js     4014c9 <initialize_bomb+0x7d>
  40150e:	48 8b 84 24 48 20 00 	mov    0x2048(%rsp),%rax
  401515:	00 
  401516:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  40151d:	00 00 
  40151f:	74 05                	je     401526 <initialize_bomb+0xda>
  401521:	e8 6a f6 ff ff       	callq  400b90 <__stack_chk_fail@plt>
  401526:	48 81 c4 50 20 00 00 	add    $0x2050,%rsp
  40152d:	5b                   	pop    %rbx
  40152e:	c3                   	retq   

000000000040152f <initialize_bomb_solve>:
  40152f:	f3 c3                	repz retq 

0000000000401531 <blank_line>:
  401531:	55                   	push   %rbp
  401532:	53                   	push   %rbx
  401533:	48 83 ec 08          	sub    $0x8,%rsp
  401537:	48 89 fd             	mov    %rdi,%rbp
  40153a:	eb 17                	jmp    401553 <blank_line+0x22>
  40153c:	e8 7f f7 ff ff       	callq  400cc0 <__ctype_b_loc@plt>
  401541:	48 83 c5 01          	add    $0x1,%rbp
  401545:	48 0f be db          	movsbq %bl,%rbx
  401549:	48 8b 00             	mov    (%rax),%rax
  40154c:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
  401551:	74 0f                	je     401562 <blank_line+0x31>
  401553:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
  401557:	84 db                	test   %bl,%bl
  401559:	75 e1                	jne    40153c <blank_line+0xb>
  40155b:	b8 01 00 00 00       	mov    $0x1,%eax
  401560:	eb 05                	jmp    401567 <blank_line+0x36>
  401562:	b8 00 00 00 00       	mov    $0x0,%eax
  401567:	48 83 c4 08          	add    $0x8,%rsp
  40156b:	5b                   	pop    %rbx
  40156c:	5d                   	pop    %rbp
  40156d:	c3                   	retq   

000000000040156e <skip>:
  40156e:	53                   	push   %rbx
  40156f:	48 63 05 36 32 20 00 	movslq 0x203236(%rip),%rax        # 6047ac <num_input_strings>
  401576:	48 8d 3c 80          	lea    (%rax,%rax,4),%rdi
  40157a:	48 c1 e7 04          	shl    $0x4,%rdi
  40157e:	48 81 c7 c0 47 60 00 	add    $0x6047c0,%rdi
  401585:	48 8b 15 24 32 20 00 	mov    0x203224(%rip),%rdx        # 6047b0 <infile>
  40158c:	be 50 00 00 00       	mov    $0x50,%esi
  401591:	e8 4a f6 ff ff       	callq  400be0 <fgets@plt>
  401596:	48 89 c3             	mov    %rax,%rbx
  401599:	48 85 c0             	test   %rax,%rax
  40159c:	74 0c                	je     4015aa <skip+0x3c>
  40159e:	48 89 c7             	mov    %rax,%rdi
  4015a1:	e8 8b ff ff ff       	callq  401531 <blank_line>
  4015a6:	85 c0                	test   %eax,%eax
  4015a8:	75 c5                	jne    40156f <skip+0x1>
  4015aa:	48 89 d8             	mov    %rbx,%rax
  4015ad:	5b                   	pop    %rbx
  4015ae:	c3                   	retq   

00000000004015af <send_msg>:
  4015af:	48 81 ec 18 40 00 00 	sub    $0x4018,%rsp
  4015b6:	41 89 f8             	mov    %edi,%r8d
  4015b9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4015c0:	00 00 
  4015c2:	48 89 84 24 08 40 00 	mov    %rax,0x4008(%rsp)
  4015c9:	00 
  4015ca:	31 c0                	xor    %eax,%eax
  4015cc:	8b 35 da 31 20 00    	mov    0x2031da(%rip),%esi        # 6047ac <num_input_strings>
  4015d2:	8d 46 ff             	lea    -0x1(%rsi),%eax
  4015d5:	48 98                	cltq   
  4015d7:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
  4015db:	48 c1 e2 04          	shl    $0x4,%rdx
  4015df:	48 81 c2 c0 47 60 00 	add    $0x6047c0,%rdx
  4015e6:	b8 00 00 00 00       	mov    $0x0,%eax
  4015eb:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4015f2:	48 89 d7             	mov    %rdx,%rdi
  4015f5:	f2 ae                	repnz scas %es:(%rdi),%al
  4015f7:	48 f7 d1             	not    %rcx
  4015fa:	48 83 c1 63          	add    $0x63,%rcx
  4015fe:	48 81 f9 00 20 00 00 	cmp    $0x2000,%rcx
  401605:	76 19                	jbe    401620 <send_msg+0x71>
  401607:	be c8 27 40 00       	mov    $0x4027c8,%esi
  40160c:	bf 01 00 00 00       	mov    $0x1,%edi
  401611:	e8 3a f6 ff ff       	callq  400c50 <__printf_chk@plt>
  401616:	bf 08 00 00 00       	mov    $0x8,%edi
  40161b:	e8 60 f6 ff ff       	callq  400c80 <exit@plt>
  401620:	45 85 c0             	test   %r8d,%r8d
  401623:	41 b9 2c 29 40 00    	mov    $0x40292c,%r9d
  401629:	b8 24 29 40 00       	mov    $0x402924,%eax
  40162e:	4c 0f 45 c8          	cmovne %rax,%r9
  401632:	52                   	push   %rdx
  401633:	56                   	push   %rsi
  401634:	44 8b 05 39 2d 20 00 	mov    0x202d39(%rip),%r8d        # 604374 <bomb_id>
  40163b:	b9 35 29 40 00       	mov    $0x402935,%ecx
  401640:	ba 00 20 00 00       	mov    $0x2000,%edx
  401645:	be 01 00 00 00       	mov    $0x1,%esi
  40164a:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  40164f:	b8 00 00 00 00       	mov    $0x0,%eax
  401654:	e8 77 f6 ff ff       	callq  400cd0 <__sprintf_chk@plt>
  401659:	4c 8d 84 24 10 20 00 	lea    0x2010(%rsp),%r8
  401660:	00 
  401661:	b9 00 00 00 00       	mov    $0x0,%ecx
  401666:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  40166b:	be 50 43 60 00       	mov    $0x604350,%esi
  401670:	bf 68 43 60 00       	mov    $0x604368,%edi
  401675:	e8 ae 0d 00 00       	callq  402428 <driver_post>
  40167a:	48 83 c4 10          	add    $0x10,%rsp
  40167e:	85 c0                	test   %eax,%eax
  401680:	79 17                	jns    401699 <send_msg+0xea>
  401682:	48 8d bc 24 00 20 00 	lea    0x2000(%rsp),%rdi
  401689:	00 
  40168a:	e8 e1 f4 ff ff       	callq  400b70 <puts@plt>
  40168f:	bf 00 00 00 00       	mov    $0x0,%edi
  401694:	e8 e7 f5 ff ff       	callq  400c80 <exit@plt>
  401699:	48 8b 84 24 08 40 00 	mov    0x4008(%rsp),%rax
  4016a0:	00 
  4016a1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4016a8:	00 00 
  4016aa:	74 05                	je     4016b1 <send_msg+0x102>
  4016ac:	e8 df f4 ff ff       	callq  400b90 <__stack_chk_fail@plt>
  4016b1:	48 81 c4 18 40 00 00 	add    $0x4018,%rsp
  4016b8:	c3                   	retq   

00000000004016b9 <explode_bomb>:
  4016b9:	48 83 ec 08          	sub    $0x8,%rsp
  4016bd:	bf 41 29 40 00       	mov    $0x402941,%edi
  4016c2:	e8 a9 f4 ff ff       	callq  400b70 <puts@plt>
  4016c7:	bf 4a 29 40 00       	mov    $0x40294a,%edi
  4016cc:	e8 9f f4 ff ff       	callq  400b70 <puts@plt>
  4016d1:	bf 00 00 00 00       	mov    $0x0,%edi
  4016d6:	e8 d4 fe ff ff       	callq  4015af <send_msg>
  4016db:	bf f0 27 40 00       	mov    $0x4027f0,%edi
  4016e0:	e8 8b f4 ff ff       	callq  400b70 <puts@plt>
  4016e5:	bf 08 00 00 00       	mov    $0x8,%edi
  4016ea:	e8 91 f5 ff ff       	callq  400c80 <exit@plt>

00000000004016ef <read_six_numbers>:
  4016ef:	48 83 ec 08          	sub    $0x8,%rsp
  4016f3:	48 89 f2             	mov    %rsi,%rdx
  4016f6:	48 8d 4e 04          	lea    0x4(%rsi),%rcx
  4016fa:	48 8d 46 14          	lea    0x14(%rsi),%rax
  4016fe:	50                   	push   %rax
  4016ff:	48 8d 46 10          	lea    0x10(%rsi),%rax
  401703:	50                   	push   %rax
  401704:	4c 8d 4e 0c          	lea    0xc(%rsi),%r9
  401708:	4c 8d 46 08          	lea    0x8(%rsi),%r8
  40170c:	be 61 29 40 00       	mov    $0x402961,%esi
  401711:	b8 00 00 00 00       	mov    $0x0,%eax
  401716:	e8 25 f5 ff ff       	callq  400c40 <__isoc99_sscanf@plt>
  40171b:	48 83 c4 10          	add    $0x10,%rsp
  40171f:	83 f8 05             	cmp    $0x5,%eax
  401722:	7f 05                	jg     401729 <read_six_numbers+0x3a>
  401724:	e8 90 ff ff ff       	callq  4016b9 <explode_bomb>
  401729:	48 83 c4 08          	add    $0x8,%rsp
  40172d:	c3                   	retq   

000000000040172e <read_line>:
  40172e:	48 83 ec 08          	sub    $0x8,%rsp
  401732:	b8 00 00 00 00       	mov    $0x0,%eax
  401737:	e8 32 fe ff ff       	callq  40156e <skip>
  40173c:	48 85 c0             	test   %rax,%rax
  40173f:	75 6e                	jne    4017af <read_line+0x81>
  401741:	48 8b 05 48 30 20 00 	mov    0x203048(%rip),%rax        # 604790 <stdin@@GLIBC_2.2.5>
  401748:	48 39 05 61 30 20 00 	cmp    %rax,0x203061(%rip)        # 6047b0 <infile>
  40174f:	75 14                	jne    401765 <read_line+0x37>
  401751:	bf 73 29 40 00       	mov    $0x402973,%edi
  401756:	e8 15 f4 ff ff       	callq  400b70 <puts@plt>
  40175b:	bf 08 00 00 00       	mov    $0x8,%edi
  401760:	e8 1b f5 ff ff       	callq  400c80 <exit@plt>
  401765:	bf 91 29 40 00       	mov    $0x402991,%edi
  40176a:	e8 c1 f3 ff ff       	callq  400b30 <getenv@plt>
  40176f:	48 85 c0             	test   %rax,%rax
  401772:	74 0a                	je     40177e <read_line+0x50>
  401774:	bf 00 00 00 00       	mov    $0x0,%edi
  401779:	e8 02 f5 ff ff       	callq  400c80 <exit@plt>
  40177e:	48 8b 05 0b 30 20 00 	mov    0x20300b(%rip),%rax        # 604790 <stdin@@GLIBC_2.2.5>
  401785:	48 89 05 24 30 20 00 	mov    %rax,0x203024(%rip)        # 6047b0 <infile>
  40178c:	b8 00 00 00 00       	mov    $0x0,%eax
  401791:	e8 d8 fd ff ff       	callq  40156e <skip>
  401796:	48 85 c0             	test   %rax,%rax
  401799:	75 14                	jne    4017af <read_line+0x81>
  40179b:	bf 73 29 40 00       	mov    $0x402973,%edi
  4017a0:	e8 cb f3 ff ff       	callq  400b70 <puts@plt>
  4017a5:	bf 00 00 00 00       	mov    $0x0,%edi
  4017aa:	e8 d1 f4 ff ff       	callq  400c80 <exit@plt>
  4017af:	8b 35 f7 2f 20 00    	mov    0x202ff7(%rip),%esi        # 6047ac <num_input_strings>
  4017b5:	48 63 c6             	movslq %esi,%rax
  4017b8:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
  4017bc:	48 c1 e2 04          	shl    $0x4,%rdx
  4017c0:	48 81 c2 c0 47 60 00 	add    $0x6047c0,%rdx
  4017c7:	b8 00 00 00 00       	mov    $0x0,%eax
  4017cc:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4017d3:	48 89 d7             	mov    %rdx,%rdi
  4017d6:	f2 ae                	repnz scas %es:(%rdi),%al
  4017d8:	48 f7 d1             	not    %rcx
  4017db:	48 83 e9 01          	sub    $0x1,%rcx
  4017df:	83 f9 4e             	cmp    $0x4e,%ecx
  4017e2:	7e 46                	jle    40182a <read_line+0xfc>
  4017e4:	bf 9c 29 40 00       	mov    $0x40299c,%edi
  4017e9:	e8 82 f3 ff ff       	callq  400b70 <puts@plt>
  4017ee:	8b 05 b8 2f 20 00    	mov    0x202fb8(%rip),%eax        # 6047ac <num_input_strings>
  4017f4:	8d 50 01             	lea    0x1(%rax),%edx
  4017f7:	89 15 af 2f 20 00    	mov    %edx,0x202faf(%rip)        # 6047ac <num_input_strings>
  4017fd:	48 98                	cltq   
  4017ff:	48 6b c0 50          	imul   $0x50,%rax,%rax
  401803:	48 bf 2a 2a 2a 74 72 	movabs $0x636e7572742a2a2a,%rdi
  40180a:	75 6e 63 
  40180d:	48 89 b8 c0 47 60 00 	mov    %rdi,0x6047c0(%rax)
  401814:	48 bf 61 74 65 64 2a 	movabs $0x2a2a2a64657461,%rdi
  40181b:	2a 2a 00 
  40181e:	48 89 b8 c8 47 60 00 	mov    %rdi,0x6047c8(%rax)
  401825:	e8 8f fe ff ff       	callq  4016b9 <explode_bomb>
  40182a:	83 e9 01             	sub    $0x1,%ecx
  40182d:	48 63 c9             	movslq %ecx,%rcx
  401830:	48 63 c6             	movslq %esi,%rax
  401833:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401837:	48 c1 e0 04          	shl    $0x4,%rax
  40183b:	c6 84 01 c0 47 60 00 	movb   $0x0,0x6047c0(%rcx,%rax,1)
  401842:	00 
  401843:	8d 46 01             	lea    0x1(%rsi),%eax
  401846:	89 05 60 2f 20 00    	mov    %eax,0x202f60(%rip)        # 6047ac <num_input_strings>
  40184c:	48 89 d0             	mov    %rdx,%rax
  40184f:	48 83 c4 08          	add    $0x8,%rsp
  401853:	c3                   	retq   

0000000000401854 <phase_defused>:
  401854:	48 83 ec 78          	sub    $0x78,%rsp
  401858:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40185f:	00 00 
  401861:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  401866:	31 c0                	xor    %eax,%eax
  401868:	bf 01 00 00 00       	mov    $0x1,%edi
  40186d:	e8 3d fd ff ff       	callq  4015af <send_msg>
  401872:	83 3d 33 2f 20 00 06 	cmpl   $0x6,0x202f33(%rip)        # 6047ac <num_input_strings>
  401879:	75 6d                	jne    4018e8 <phase_defused+0x94>
  40187b:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
  401880:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
  401885:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  40188a:	be b7 29 40 00       	mov    $0x4029b7,%esi
  40188f:	bf b0 48 60 00       	mov    $0x6048b0,%edi
  401894:	b8 00 00 00 00       	mov    $0x0,%eax
  401899:	e8 a2 f3 ff ff       	callq  400c40 <__isoc99_sscanf@plt>
  40189e:	83 f8 03             	cmp    $0x3,%eax
  4018a1:	75 31                	jne    4018d4 <phase_defused+0x80>
  4018a3:	be c0 29 40 00       	mov    $0x4029c0,%esi
  4018a8:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  4018ad:	e8 33 fb ff ff       	callq  4013e5 <strings_not_equal>
  4018b2:	85 c0                	test   %eax,%eax
  4018b4:	75 1e                	jne    4018d4 <phase_defused+0x80>
  4018b6:	bf 18 28 40 00       	mov    $0x402818,%edi
  4018bb:	e8 b0 f2 ff ff       	callq  400b70 <puts@plt>
  4018c0:	bf 40 28 40 00       	mov    $0x402840,%edi
  4018c5:	e8 a6 f2 ff ff       	callq  400b70 <puts@plt>
  4018ca:	b8 00 00 00 00       	mov    $0x0,%eax
  4018cf:	e8 27 fa ff ff       	callq  4012fb <secret_phase>
  4018d4:	bf 78 28 40 00       	mov    $0x402878,%edi
  4018d9:	e8 92 f2 ff ff       	callq  400b70 <puts@plt>
  4018de:	bf a8 28 40 00       	mov    $0x4028a8,%edi
  4018e3:	e8 88 f2 ff ff       	callq  400b70 <puts@plt>
  4018e8:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
  4018ed:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  4018f4:	00 00 
  4018f6:	74 05                	je     4018fd <phase_defused+0xa9>
  4018f8:	e8 93 f2 ff ff       	callq  400b90 <__stack_chk_fail@plt>
  4018fd:	48 83 c4 78          	add    $0x78,%rsp
  401901:	c3                   	retq   

0000000000401902 <sigalrm_handler>:
  401902:	48 83 ec 08          	sub    $0x8,%rsp
  401906:	b9 00 00 00 00       	mov    $0x0,%ecx
  40190b:	ba 48 2a 40 00       	mov    $0x402a48,%edx
  401910:	be 01 00 00 00       	mov    $0x1,%esi
  401915:	48 8b 3d 84 2e 20 00 	mov    0x202e84(%rip),%rdi        # 6047a0 <stderr@@GLIBC_2.2.5>
  40191c:	b8 00 00 00 00       	mov    $0x0,%eax
  401921:	e8 7a f3 ff ff       	callq  400ca0 <__fprintf_chk@plt>
  401926:	bf 01 00 00 00       	mov    $0x1,%edi
  40192b:	e8 50 f3 ff ff       	callq  400c80 <exit@plt>

0000000000401930 <rio_readlineb>:
  401930:	41 56                	push   %r14
  401932:	41 55                	push   %r13
  401934:	41 54                	push   %r12
  401936:	55                   	push   %rbp
  401937:	53                   	push   %rbx
  401938:	48 83 ec 10          	sub    $0x10,%rsp
  40193c:	48 89 fb             	mov    %rdi,%rbx
  40193f:	49 89 f5             	mov    %rsi,%r13
  401942:	49 89 d6             	mov    %rdx,%r14
  401945:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40194c:	00 00 
  40194e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401953:	31 c0                	xor    %eax,%eax
  401955:	41 bc 01 00 00 00    	mov    $0x1,%r12d
  40195b:	48 8d 6f 10          	lea    0x10(%rdi),%rbp
  40195f:	48 83 fa 01          	cmp    $0x1,%rdx
  401963:	77 2c                	ja     401991 <rio_readlineb+0x61>
  401965:	eb 6d                	jmp    4019d4 <rio_readlineb+0xa4>
  401967:	ba 00 20 00 00       	mov    $0x2000,%edx
  40196c:	48 89 ee             	mov    %rbp,%rsi
  40196f:	8b 3b                	mov    (%rbx),%edi
  401971:	e8 4a f2 ff ff       	callq  400bc0 <read@plt>
  401976:	89 43 04             	mov    %eax,0x4(%rbx)
  401979:	85 c0                	test   %eax,%eax
  40197b:	79 0c                	jns    401989 <rio_readlineb+0x59>
  40197d:	e8 ce f1 ff ff       	callq  400b50 <__errno_location@plt>
  401982:	83 38 04             	cmpl   $0x4,(%rax)
  401985:	74 0a                	je     401991 <rio_readlineb+0x61>
  401987:	eb 6c                	jmp    4019f5 <rio_readlineb+0xc5>
  401989:	85 c0                	test   %eax,%eax
  40198b:	74 71                	je     4019fe <rio_readlineb+0xce>
  40198d:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
  401991:	8b 43 04             	mov    0x4(%rbx),%eax
  401994:	85 c0                	test   %eax,%eax
  401996:	7e cf                	jle    401967 <rio_readlineb+0x37>
  401998:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  40199c:	0f b6 0a             	movzbl (%rdx),%ecx
  40199f:	88 4c 24 07          	mov    %cl,0x7(%rsp)
  4019a3:	48 83 c2 01          	add    $0x1,%rdx
  4019a7:	48 89 53 08          	mov    %rdx,0x8(%rbx)
  4019ab:	83 e8 01             	sub    $0x1,%eax
  4019ae:	89 43 04             	mov    %eax,0x4(%rbx)
  4019b1:	49 83 c5 01          	add    $0x1,%r13
  4019b5:	41 88 4d ff          	mov    %cl,-0x1(%r13)
  4019b9:	80 f9 0a             	cmp    $0xa,%cl
  4019bc:	75 0a                	jne    4019c8 <rio_readlineb+0x98>
  4019be:	eb 14                	jmp    4019d4 <rio_readlineb+0xa4>
  4019c0:	41 83 fc 01          	cmp    $0x1,%r12d
  4019c4:	75 0e                	jne    4019d4 <rio_readlineb+0xa4>
  4019c6:	eb 16                	jmp    4019de <rio_readlineb+0xae>
  4019c8:	41 83 c4 01          	add    $0x1,%r12d
  4019cc:	49 63 c4             	movslq %r12d,%rax
  4019cf:	4c 39 f0             	cmp    %r14,%rax
  4019d2:	72 bd                	jb     401991 <rio_readlineb+0x61>
  4019d4:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
  4019d9:	49 63 c4             	movslq %r12d,%rax
  4019dc:	eb 05                	jmp    4019e3 <rio_readlineb+0xb3>
  4019de:	b8 00 00 00 00       	mov    $0x0,%eax
  4019e3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  4019e8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4019ef:	00 00 
  4019f1:	74 22                	je     401a15 <rio_readlineb+0xe5>
  4019f3:	eb 1b                	jmp    401a10 <rio_readlineb+0xe0>
  4019f5:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  4019fc:	eb 05                	jmp    401a03 <rio_readlineb+0xd3>
  4019fe:	b8 00 00 00 00       	mov    $0x0,%eax
  401a03:	85 c0                	test   %eax,%eax
  401a05:	74 b9                	je     4019c0 <rio_readlineb+0x90>
  401a07:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  401a0e:	eb d3                	jmp    4019e3 <rio_readlineb+0xb3>
  401a10:	e8 7b f1 ff ff       	callq  400b90 <__stack_chk_fail@plt>
  401a15:	48 83 c4 10          	add    $0x10,%rsp
  401a19:	5b                   	pop    %rbx
  401a1a:	5d                   	pop    %rbp
  401a1b:	41 5c                	pop    %r12
  401a1d:	41 5d                	pop    %r13
  401a1f:	41 5e                	pop    %r14
  401a21:	c3                   	retq   

0000000000401a22 <submitr>:
  401a22:	41 57                	push   %r15
  401a24:	41 56                	push   %r14
  401a26:	41 55                	push   %r13
  401a28:	41 54                	push   %r12
  401a2a:	55                   	push   %rbp
  401a2b:	53                   	push   %rbx
  401a2c:	48 81 ec 68 a0 00 00 	sub    $0xa068,%rsp
  401a33:	49 89 fd             	mov    %rdi,%r13
  401a36:	89 f5                	mov    %esi,%ebp
  401a38:	48 89 14 24          	mov    %rdx,(%rsp)
  401a3c:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  401a41:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
  401a46:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
  401a4b:	48 8b 9c 24 a0 a0 00 	mov    0xa0a0(%rsp),%rbx
  401a52:	00 
  401a53:	4c 8b bc 24 a8 a0 00 	mov    0xa0a8(%rsp),%r15
  401a5a:	00 
  401a5b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401a62:	00 00 
  401a64:	48 89 84 24 58 a0 00 	mov    %rax,0xa058(%rsp)
  401a6b:	00 
  401a6c:	31 c0                	xor    %eax,%eax
  401a6e:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%rsp)
  401a75:	00 
  401a76:	ba 00 00 00 00       	mov    $0x0,%edx
  401a7b:	be 01 00 00 00       	mov    $0x1,%esi
  401a80:	bf 02 00 00 00       	mov    $0x2,%edi
  401a85:	e8 56 f2 ff ff       	callq  400ce0 <socket@plt>
  401a8a:	85 c0                	test   %eax,%eax
  401a8c:	79 50                	jns    401ade <submitr+0xbc>
  401a8e:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401a95:	3a 20 43 
  401a98:	49 89 07             	mov    %rax,(%r15)
  401a9b:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  401aa2:	20 75 6e 
  401aa5:	49 89 47 08          	mov    %rax,0x8(%r15)
  401aa9:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401ab0:	74 6f 20 
  401ab3:	49 89 47 10          	mov    %rax,0x10(%r15)
  401ab7:	48 b8 63 72 65 61 74 	movabs $0x7320657461657263,%rax
  401abe:	65 20 73 
  401ac1:	49 89 47 18          	mov    %rax,0x18(%r15)
  401ac5:	41 c7 47 20 6f 63 6b 	movl   $0x656b636f,0x20(%r15)
  401acc:	65 
  401acd:	66 41 c7 47 24 74 00 	movw   $0x74,0x24(%r15)
  401ad4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401ad9:	e9 12 06 00 00       	jmpq   4020f0 <submitr+0x6ce>
  401ade:	41 89 c4             	mov    %eax,%r12d
  401ae1:	4c 89 ef             	mov    %r13,%rdi
  401ae4:	e8 17 f1 ff ff       	callq  400c00 <gethostbyname@plt>
  401ae9:	48 85 c0             	test   %rax,%rax
  401aec:	75 6b                	jne    401b59 <submitr+0x137>
  401aee:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  401af5:	3a 20 44 
  401af8:	49 89 07             	mov    %rax,(%r15)
  401afb:	48 b8 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rax
  401b02:	20 75 6e 
  401b05:	49 89 47 08          	mov    %rax,0x8(%r15)
  401b09:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401b10:	74 6f 20 
  401b13:	49 89 47 10          	mov    %rax,0x10(%r15)
  401b17:	48 b8 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rax
  401b1e:	76 65 20 
  401b21:	49 89 47 18          	mov    %rax,0x18(%r15)
  401b25:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  401b2c:	72 20 61 
  401b2f:	49 89 47 20          	mov    %rax,0x20(%r15)
  401b33:	41 c7 47 28 64 64 72 	movl   $0x65726464,0x28(%r15)
  401b3a:	65 
  401b3b:	66 41 c7 47 2c 73 73 	movw   $0x7373,0x2c(%r15)
  401b42:	41 c6 47 2e 00       	movb   $0x0,0x2e(%r15)
  401b47:	44 89 e7             	mov    %r12d,%edi
  401b4a:	e8 61 f0 ff ff       	callq  400bb0 <close@plt>
  401b4f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401b54:	e9 97 05 00 00       	jmpq   4020f0 <submitr+0x6ce>
  401b59:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
  401b60:	00 00 
  401b62:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
  401b69:	00 00 
  401b6b:	66 c7 44 24 30 02 00 	movw   $0x2,0x30(%rsp)
  401b72:	48 63 50 14          	movslq 0x14(%rax),%rdx
  401b76:	48 8b 40 18          	mov    0x18(%rax),%rax
  401b7a:	48 8d 7c 24 34       	lea    0x34(%rsp),%rdi
  401b7f:	b9 0c 00 00 00       	mov    $0xc,%ecx
  401b84:	48 8b 30             	mov    (%rax),%rsi
  401b87:	e8 84 f0 ff ff       	callq  400c10 <__memmove_chk@plt>
  401b8c:	66 c1 cd 08          	ror    $0x8,%bp
  401b90:	66 89 6c 24 32       	mov    %bp,0x32(%rsp)
  401b95:	ba 10 00 00 00       	mov    $0x10,%edx
  401b9a:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
  401b9f:	44 89 e7             	mov    %r12d,%edi
  401ba2:	e8 e9 f0 ff ff       	callq  400c90 <connect@plt>
  401ba7:	85 c0                	test   %eax,%eax
  401ba9:	79 5d                	jns    401c08 <submitr+0x1e6>
  401bab:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
  401bb2:	3a 20 55 
  401bb5:	49 89 07             	mov    %rax,(%r15)
  401bb8:	48 b8 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rax
  401bbf:	20 74 6f 
  401bc2:	49 89 47 08          	mov    %rax,0x8(%r15)
  401bc6:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
  401bcd:	65 63 74 
  401bd0:	49 89 47 10          	mov    %rax,0x10(%r15)
  401bd4:	48 b8 20 74 6f 20 74 	movabs $0x20656874206f7420,%rax
  401bdb:	68 65 20 
  401bde:	49 89 47 18          	mov    %rax,0x18(%r15)
  401be2:	41 c7 47 20 73 65 72 	movl   $0x76726573,0x20(%r15)
  401be9:	76 
  401bea:	66 41 c7 47 24 65 72 	movw   $0x7265,0x24(%r15)
  401bf1:	41 c6 47 26 00       	movb   $0x0,0x26(%r15)
  401bf6:	44 89 e7             	mov    %r12d,%edi
  401bf9:	e8 b2 ef ff ff       	callq  400bb0 <close@plt>
  401bfe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401c03:	e9 e8 04 00 00       	jmpq   4020f0 <submitr+0x6ce>
  401c08:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
  401c0f:	b8 00 00 00 00       	mov    $0x0,%eax
  401c14:	4c 89 c9             	mov    %r9,%rcx
  401c17:	48 89 df             	mov    %rbx,%rdi
  401c1a:	f2 ae                	repnz scas %es:(%rdi),%al
  401c1c:	48 f7 d1             	not    %rcx
  401c1f:	48 89 ce             	mov    %rcx,%rsi
  401c22:	4c 89 c9             	mov    %r9,%rcx
  401c25:	48 8b 3c 24          	mov    (%rsp),%rdi
  401c29:	f2 ae                	repnz scas %es:(%rdi),%al
  401c2b:	49 89 c8             	mov    %rcx,%r8
  401c2e:	4c 89 c9             	mov    %r9,%rcx
  401c31:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  401c36:	f2 ae                	repnz scas %es:(%rdi),%al
  401c38:	48 f7 d1             	not    %rcx
  401c3b:	48 89 ca             	mov    %rcx,%rdx
  401c3e:	4c 89 c9             	mov    %r9,%rcx
  401c41:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  401c46:	f2 ae                	repnz scas %es:(%rdi),%al
  401c48:	4c 29 c2             	sub    %r8,%rdx
  401c4b:	48 29 ca             	sub    %rcx,%rdx
  401c4e:	48 8d 44 76 fd       	lea    -0x3(%rsi,%rsi,2),%rax
  401c53:	48 8d 44 02 7b       	lea    0x7b(%rdx,%rax,1),%rax
  401c58:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
  401c5e:	76 73                	jbe    401cd3 <submitr+0x2b1>
  401c60:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  401c67:	3a 20 52 
  401c6a:	49 89 07             	mov    %rax,(%r15)
  401c6d:	48 b8 65 73 75 6c 74 	movabs $0x747320746c757365,%rax
  401c74:	20 73 74 
  401c77:	49 89 47 08          	mov    %rax,0x8(%r15)
  401c7b:	48 b8 72 69 6e 67 20 	movabs $0x6f6f7420676e6972,%rax
  401c82:	74 6f 6f 
  401c85:	49 89 47 10          	mov    %rax,0x10(%r15)
  401c89:	48 b8 20 6c 61 72 67 	movabs $0x202e656772616c20,%rax
  401c90:	65 2e 20 
  401c93:	49 89 47 18          	mov    %rax,0x18(%r15)
  401c97:	48 b8 49 6e 63 72 65 	movabs $0x6573616572636e49,%rax
  401c9e:	61 73 65 
  401ca1:	49 89 47 20          	mov    %rax,0x20(%r15)
  401ca5:	48 b8 20 53 55 42 4d 	movabs $0x5254494d42555320,%rax
  401cac:	49 54 52 
  401caf:	49 89 47 28          	mov    %rax,0x28(%r15)
  401cb3:	48 b8 5f 4d 41 58 42 	movabs $0x46554258414d5f,%rax
  401cba:	55 46 00 
  401cbd:	49 89 47 30          	mov    %rax,0x30(%r15)
  401cc1:	44 89 e7             	mov    %r12d,%edi
  401cc4:	e8 e7 ee ff ff       	callq  400bb0 <close@plt>
  401cc9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401cce:	e9 1d 04 00 00       	jmpq   4020f0 <submitr+0x6ce>
  401cd3:	48 8d 94 24 50 40 00 	lea    0x4050(%rsp),%rdx
  401cda:	00 
  401cdb:	b9 00 04 00 00       	mov    $0x400,%ecx
  401ce0:	b8 00 00 00 00       	mov    $0x0,%eax
  401ce5:	48 89 d7             	mov    %rdx,%rdi
  401ce8:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  401ceb:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  401cf2:	48 89 df             	mov    %rbx,%rdi
  401cf5:	f2 ae                	repnz scas %es:(%rdi),%al
  401cf7:	48 89 c8             	mov    %rcx,%rax
  401cfa:	48 f7 d0             	not    %rax
  401cfd:	48 83 e8 01          	sub    $0x1,%rax
  401d01:	85 c0                	test   %eax,%eax
  401d03:	0f 84 90 04 00 00    	je     402199 <submitr+0x777>
  401d09:	8d 40 ff             	lea    -0x1(%rax),%eax
  401d0c:	4c 8d 74 03 01       	lea    0x1(%rbx,%rax,1),%r14
  401d11:	48 89 d5             	mov    %rdx,%rbp
  401d14:	49 bd d9 ff 00 00 00 	movabs $0x2000000000ffd9,%r13
  401d1b:	00 20 00 
  401d1e:	44 0f b6 03          	movzbl (%rbx),%r8d
  401d22:	41 8d 40 d6          	lea    -0x2a(%r8),%eax
  401d26:	3c 35                	cmp    $0x35,%al
  401d28:	77 06                	ja     401d30 <submitr+0x30e>
  401d2a:	49 0f a3 c5          	bt     %rax,%r13
  401d2e:	72 0d                	jb     401d3d <submitr+0x31b>
  401d30:	44 89 c0             	mov    %r8d,%eax
  401d33:	83 e0 df             	and    $0xffffffdf,%eax
  401d36:	83 e8 41             	sub    $0x41,%eax
  401d39:	3c 19                	cmp    $0x19,%al
  401d3b:	77 0a                	ja     401d47 <submitr+0x325>
  401d3d:	44 88 45 00          	mov    %r8b,0x0(%rbp)
  401d41:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
  401d45:	eb 6c                	jmp    401db3 <submitr+0x391>
  401d47:	41 80 f8 20          	cmp    $0x20,%r8b
  401d4b:	75 0a                	jne    401d57 <submitr+0x335>
  401d4d:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
  401d51:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
  401d55:	eb 5c                	jmp    401db3 <submitr+0x391>
  401d57:	41 8d 40 e0          	lea    -0x20(%r8),%eax
  401d5b:	3c 5f                	cmp    $0x5f,%al
  401d5d:	76 0a                	jbe    401d69 <submitr+0x347>
  401d5f:	41 80 f8 09          	cmp    $0x9,%r8b
  401d63:	0f 85 a3 03 00 00    	jne    40210c <submitr+0x6ea>
  401d69:	45 0f b6 c0          	movzbl %r8b,%r8d
  401d6d:	b9 20 2b 40 00       	mov    $0x402b20,%ecx
  401d72:	ba 08 00 00 00       	mov    $0x8,%edx
  401d77:	be 01 00 00 00       	mov    $0x1,%esi
  401d7c:	48 8d bc 24 50 80 00 	lea    0x8050(%rsp),%rdi
  401d83:	00 
  401d84:	b8 00 00 00 00       	mov    $0x0,%eax
  401d89:	e8 42 ef ff ff       	callq  400cd0 <__sprintf_chk@plt>
  401d8e:	0f b6 84 24 50 80 00 	movzbl 0x8050(%rsp),%eax
  401d95:	00 
  401d96:	88 45 00             	mov    %al,0x0(%rbp)
  401d99:	0f b6 84 24 51 80 00 	movzbl 0x8051(%rsp),%eax
  401da0:	00 
  401da1:	88 45 01             	mov    %al,0x1(%rbp)
  401da4:	0f b6 84 24 52 80 00 	movzbl 0x8052(%rsp),%eax
  401dab:	00 
  401dac:	88 45 02             	mov    %al,0x2(%rbp)
  401daf:	48 8d 6d 03          	lea    0x3(%rbp),%rbp
  401db3:	48 83 c3 01          	add    $0x1,%rbx
  401db7:	49 39 de             	cmp    %rbx,%r14
  401dba:	0f 85 5e ff ff ff    	jne    401d1e <submitr+0x2fc>
  401dc0:	e9 d4 03 00 00       	jmpq   402199 <submitr+0x777>
  401dc5:	48 89 da             	mov    %rbx,%rdx
  401dc8:	48 89 ee             	mov    %rbp,%rsi
  401dcb:	44 89 e7             	mov    %r12d,%edi
  401dce:	e8 ad ed ff ff       	callq  400b80 <write@plt>
  401dd3:	48 85 c0             	test   %rax,%rax
  401dd6:	7f 0f                	jg     401de7 <submitr+0x3c5>
  401dd8:	e8 73 ed ff ff       	callq  400b50 <__errno_location@plt>
  401ddd:	83 38 04             	cmpl   $0x4,(%rax)
  401de0:	75 12                	jne    401df4 <submitr+0x3d2>
  401de2:	b8 00 00 00 00       	mov    $0x0,%eax
  401de7:	48 01 c5             	add    %rax,%rbp
  401dea:	48 29 c3             	sub    %rax,%rbx
  401ded:	75 d6                	jne    401dc5 <submitr+0x3a3>
  401def:	4d 85 ed             	test   %r13,%r13
  401df2:	79 5f                	jns    401e53 <submitr+0x431>
  401df4:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401dfb:	3a 20 43 
  401dfe:	49 89 07             	mov    %rax,(%r15)
  401e01:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  401e08:	20 75 6e 
  401e0b:	49 89 47 08          	mov    %rax,0x8(%r15)
  401e0f:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401e16:	74 6f 20 
  401e19:	49 89 47 10          	mov    %rax,0x10(%r15)
  401e1d:	48 b8 77 72 69 74 65 	movabs $0x6f74206574697277,%rax
  401e24:	20 74 6f 
  401e27:	49 89 47 18          	mov    %rax,0x18(%r15)
  401e2b:	48 b8 20 74 68 65 20 	movabs $0x7265732065687420,%rax
  401e32:	73 65 72 
  401e35:	49 89 47 20          	mov    %rax,0x20(%r15)
  401e39:	41 c7 47 28 76 65 72 	movl   $0x726576,0x28(%r15)
  401e40:	00 
  401e41:	44 89 e7             	mov    %r12d,%edi
  401e44:	e8 67 ed ff ff       	callq  400bb0 <close@plt>
  401e49:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401e4e:	e9 9d 02 00 00       	jmpq   4020f0 <submitr+0x6ce>
  401e53:	44 89 64 24 40       	mov    %r12d,0x40(%rsp)
  401e58:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%rsp)
  401e5f:	00 
  401e60:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
  401e65:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  401e6a:	ba 00 20 00 00       	mov    $0x2000,%edx
  401e6f:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
  401e76:	00 
  401e77:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  401e7c:	e8 af fa ff ff       	callq  401930 <rio_readlineb>
  401e81:	48 85 c0             	test   %rax,%rax
  401e84:	7f 74                	jg     401efa <submitr+0x4d8>
  401e86:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401e8d:	3a 20 43 
  401e90:	49 89 07             	mov    %rax,(%r15)
  401e93:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  401e9a:	20 75 6e 
  401e9d:	49 89 47 08          	mov    %rax,0x8(%r15)
  401ea1:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401ea8:	74 6f 20 
  401eab:	49 89 47 10          	mov    %rax,0x10(%r15)
  401eaf:	48 b8 72 65 61 64 20 	movabs $0x7269662064616572,%rax
  401eb6:	66 69 72 
  401eb9:	49 89 47 18          	mov    %rax,0x18(%r15)
  401ebd:	48 b8 73 74 20 68 65 	movabs $0x6564616568207473,%rax
  401ec4:	61 64 65 
  401ec7:	49 89 47 20          	mov    %rax,0x20(%r15)
  401ecb:	48 b8 72 20 66 72 6f 	movabs $0x73206d6f72662072,%rax
  401ed2:	6d 20 73 
  401ed5:	49 89 47 28          	mov    %rax,0x28(%r15)
  401ed9:	41 c7 47 30 65 72 76 	movl   $0x65767265,0x30(%r15)
  401ee0:	65 
  401ee1:	66 41 c7 47 34 72 00 	movw   $0x72,0x34(%r15)
  401ee8:	44 89 e7             	mov    %r12d,%edi
  401eeb:	e8 c0 ec ff ff       	callq  400bb0 <close@plt>
  401ef0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401ef5:	e9 f6 01 00 00       	jmpq   4020f0 <submitr+0x6ce>
  401efa:	4c 8d 84 24 50 80 00 	lea    0x8050(%rsp),%r8
  401f01:	00 
  401f02:	48 8d 4c 24 2c       	lea    0x2c(%rsp),%rcx
  401f07:	48 8d 94 24 50 60 00 	lea    0x6050(%rsp),%rdx
  401f0e:	00 
  401f0f:	be 27 2b 40 00       	mov    $0x402b27,%esi
  401f14:	48 8d bc 24 50 20 00 	lea    0x2050(%rsp),%rdi
  401f1b:	00 
  401f1c:	b8 00 00 00 00       	mov    $0x0,%eax
  401f21:	e8 1a ed ff ff       	callq  400c40 <__isoc99_sscanf@plt>
  401f26:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
  401f2b:	41 81 f8 c8 00 00 00 	cmp    $0xc8,%r8d
  401f32:	0f 84 be 00 00 00    	je     401ff6 <submitr+0x5d4>
  401f38:	4c 8d 8c 24 50 80 00 	lea    0x8050(%rsp),%r9
  401f3f:	00 
  401f40:	b9 70 2a 40 00       	mov    $0x402a70,%ecx
  401f45:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  401f4c:	be 01 00 00 00       	mov    $0x1,%esi
  401f51:	4c 89 ff             	mov    %r15,%rdi
  401f54:	b8 00 00 00 00       	mov    $0x0,%eax
  401f59:	e8 72 ed ff ff       	callq  400cd0 <__sprintf_chk@plt>
  401f5e:	44 89 e7             	mov    %r12d,%edi
  401f61:	e8 4a ec ff ff       	callq  400bb0 <close@plt>
  401f66:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401f6b:	e9 80 01 00 00       	jmpq   4020f0 <submitr+0x6ce>
  401f70:	ba 00 20 00 00       	mov    $0x2000,%edx
  401f75:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
  401f7c:	00 
  401f7d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  401f82:	e8 a9 f9 ff ff       	callq  401930 <rio_readlineb>
  401f87:	48 85 c0             	test   %rax,%rax
  401f8a:	7f 6a                	jg     401ff6 <submitr+0x5d4>
  401f8c:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401f93:	3a 20 43 
  401f96:	49 89 07             	mov    %rax,(%r15)
  401f99:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  401fa0:	20 75 6e 
  401fa3:	49 89 47 08          	mov    %rax,0x8(%r15)
  401fa7:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  401fae:	74 6f 20 
  401fb1:	49 89 47 10          	mov    %rax,0x10(%r15)
  401fb5:	48 b8 72 65 61 64 20 	movabs $0x6165682064616572,%rax
  401fbc:	68 65 61 
  401fbf:	49 89 47 18          	mov    %rax,0x18(%r15)
  401fc3:	48 b8 64 65 72 73 20 	movabs $0x6f72662073726564,%rax
  401fca:	66 72 6f 
  401fcd:	49 89 47 20          	mov    %rax,0x20(%r15)
  401fd1:	48 b8 6d 20 73 65 72 	movabs $0x726576726573206d,%rax
  401fd8:	76 65 72 
  401fdb:	49 89 47 28          	mov    %rax,0x28(%r15)
  401fdf:	41 c6 47 30 00       	movb   $0x0,0x30(%r15)
  401fe4:	44 89 e7             	mov    %r12d,%edi
  401fe7:	e8 c4 eb ff ff       	callq  400bb0 <close@plt>
  401fec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401ff1:	e9 fa 00 00 00       	jmpq   4020f0 <submitr+0x6ce>
  401ff6:	80 bc 24 50 20 00 00 	cmpb   $0xd,0x2050(%rsp)
  401ffd:	0d 
  401ffe:	0f 85 6c ff ff ff    	jne    401f70 <submitr+0x54e>
  402004:	80 bc 24 51 20 00 00 	cmpb   $0xa,0x2051(%rsp)
  40200b:	0a 
  40200c:	0f 85 5e ff ff ff    	jne    401f70 <submitr+0x54e>
  402012:	80 bc 24 52 20 00 00 	cmpb   $0x0,0x2052(%rsp)
  402019:	00 
  40201a:	0f 85 50 ff ff ff    	jne    401f70 <submitr+0x54e>
  402020:	ba 00 20 00 00       	mov    $0x2000,%edx
  402025:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
  40202c:	00 
  40202d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  402032:	e8 f9 f8 ff ff       	callq  401930 <rio_readlineb>
  402037:	48 85 c0             	test   %rax,%rax
  40203a:	7f 70                	jg     4020ac <submitr+0x68a>
  40203c:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  402043:	3a 20 43 
  402046:	49 89 07             	mov    %rax,(%r15)
  402049:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  402050:	20 75 6e 
  402053:	49 89 47 08          	mov    %rax,0x8(%r15)
  402057:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  40205e:	74 6f 20 
  402061:	49 89 47 10          	mov    %rax,0x10(%r15)
  402065:	48 b8 72 65 61 64 20 	movabs $0x6174732064616572,%rax
  40206c:	73 74 61 
  40206f:	49 89 47 18          	mov    %rax,0x18(%r15)
  402073:	48 b8 74 75 73 20 6d 	movabs $0x7373656d20737574,%rax
  40207a:	65 73 73 
  40207d:	49 89 47 20          	mov    %rax,0x20(%r15)
  402081:	48 b8 61 67 65 20 66 	movabs $0x6d6f726620656761,%rax
  402088:	72 6f 6d 
  40208b:	49 89 47 28          	mov    %rax,0x28(%r15)
  40208f:	48 b8 20 73 65 72 76 	movabs $0x72657672657320,%rax
  402096:	65 72 00 
  402099:	49 89 47 30          	mov    %rax,0x30(%r15)
  40209d:	44 89 e7             	mov    %r12d,%edi
  4020a0:	e8 0b eb ff ff       	callq  400bb0 <close@plt>
  4020a5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4020aa:	eb 44                	jmp    4020f0 <submitr+0x6ce>
  4020ac:	48 8d b4 24 50 20 00 	lea    0x2050(%rsp),%rsi
  4020b3:	00 
  4020b4:	4c 89 ff             	mov    %r15,%rdi
  4020b7:	e8 a4 ea ff ff       	callq  400b60 <strcpy@plt>
  4020bc:	44 89 e7             	mov    %r12d,%edi
  4020bf:	e8 ec ea ff ff       	callq  400bb0 <close@plt>
  4020c4:	41 0f b6 17          	movzbl (%r15),%edx
  4020c8:	b8 4f 00 00 00       	mov    $0x4f,%eax
  4020cd:	29 d0                	sub    %edx,%eax
  4020cf:	75 15                	jne    4020e6 <submitr+0x6c4>
  4020d1:	41 0f b6 57 01       	movzbl 0x1(%r15),%edx
  4020d6:	b8 4b 00 00 00       	mov    $0x4b,%eax
  4020db:	29 d0                	sub    %edx,%eax
  4020dd:	75 07                	jne    4020e6 <submitr+0x6c4>
  4020df:	41 0f b6 47 02       	movzbl 0x2(%r15),%eax
  4020e4:	f7 d8                	neg    %eax
  4020e6:	85 c0                	test   %eax,%eax
  4020e8:	0f 95 c0             	setne  %al
  4020eb:	0f b6 c0             	movzbl %al,%eax
  4020ee:	f7 d8                	neg    %eax
  4020f0:	48 8b 8c 24 58 a0 00 	mov    0xa058(%rsp),%rcx
  4020f7:	00 
  4020f8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4020ff:	00 00 
  402101:	0f 84 12 01 00 00    	je     402219 <submitr+0x7f7>
  402107:	e9 08 01 00 00       	jmpq   402214 <submitr+0x7f2>
  40210c:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  402113:	3a 20 52 
  402116:	49 89 07             	mov    %rax,(%r15)
  402119:	48 b8 65 73 75 6c 74 	movabs $0x747320746c757365,%rax
  402120:	20 73 74 
  402123:	49 89 47 08          	mov    %rax,0x8(%r15)
  402127:	48 b8 72 69 6e 67 20 	movabs $0x6e6f6320676e6972,%rax
  40212e:	63 6f 6e 
  402131:	49 89 47 10          	mov    %rax,0x10(%r15)
  402135:	48 b8 74 61 69 6e 73 	movabs $0x6e6120736e696174,%rax
  40213c:	20 61 6e 
  40213f:	49 89 47 18          	mov    %rax,0x18(%r15)
  402143:	48 b8 20 69 6c 6c 65 	movabs $0x6c6167656c6c6920,%rax
  40214a:	67 61 6c 
  40214d:	49 89 47 20          	mov    %rax,0x20(%r15)
  402151:	48 b8 20 6f 72 20 75 	movabs $0x72706e7520726f20,%rax
  402158:	6e 70 72 
  40215b:	49 89 47 28          	mov    %rax,0x28(%r15)
  40215f:	48 b8 69 6e 74 61 62 	movabs $0x20656c6261746e69,%rax
  402166:	6c 65 20 
  402169:	49 89 47 30          	mov    %rax,0x30(%r15)
  40216d:	48 b8 63 68 61 72 61 	movabs $0x6574636172616863,%rax
  402174:	63 74 65 
  402177:	49 89 47 38          	mov    %rax,0x38(%r15)
  40217b:	66 41 c7 47 40 72 2e 	movw   $0x2e72,0x40(%r15)
  402182:	41 c6 47 42 00       	movb   $0x0,0x42(%r15)
  402187:	44 89 e7             	mov    %r12d,%edi
  40218a:	e8 21 ea ff ff       	callq  400bb0 <close@plt>
  40218f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402194:	e9 57 ff ff ff       	jmpq   4020f0 <submitr+0x6ce>
  402199:	48 8d 9c 24 50 20 00 	lea    0x2050(%rsp),%rbx
  4021a0:	00 
  4021a1:	48 83 ec 08          	sub    $0x8,%rsp
  4021a5:	48 8d 84 24 58 40 00 	lea    0x4058(%rsp),%rax
  4021ac:	00 
  4021ad:	50                   	push   %rax
  4021ae:	ff 74 24 20          	pushq  0x20(%rsp)
  4021b2:	ff 74 24 30          	pushq  0x30(%rsp)
  4021b6:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
  4021bb:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
  4021c0:	b9 a0 2a 40 00       	mov    $0x402aa0,%ecx
  4021c5:	ba 00 20 00 00       	mov    $0x2000,%edx
  4021ca:	be 01 00 00 00       	mov    $0x1,%esi
  4021cf:	48 89 df             	mov    %rbx,%rdi
  4021d2:	b8 00 00 00 00       	mov    $0x0,%eax
  4021d7:	e8 f4 ea ff ff       	callq  400cd0 <__sprintf_chk@plt>
  4021dc:	b8 00 00 00 00       	mov    $0x0,%eax
  4021e1:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  4021e8:	48 89 df             	mov    %rbx,%rdi
  4021eb:	f2 ae                	repnz scas %es:(%rdi),%al
  4021ed:	48 89 c8             	mov    %rcx,%rax
  4021f0:	48 f7 d0             	not    %rax
  4021f3:	4c 8d 68 ff          	lea    -0x1(%rax),%r13
  4021f7:	48 83 c4 20          	add    $0x20,%rsp
  4021fb:	4c 89 eb             	mov    %r13,%rbx
  4021fe:	48 8d ac 24 50 20 00 	lea    0x2050(%rsp),%rbp
  402205:	00 
  402206:	4d 85 ed             	test   %r13,%r13
  402209:	0f 85 b6 fb ff ff    	jne    401dc5 <submitr+0x3a3>
  40220f:	e9 3f fc ff ff       	jmpq   401e53 <submitr+0x431>
  402214:	e8 77 e9 ff ff       	callq  400b90 <__stack_chk_fail@plt>
  402219:	48 81 c4 68 a0 00 00 	add    $0xa068,%rsp
  402220:	5b                   	pop    %rbx
  402221:	5d                   	pop    %rbp
  402222:	41 5c                	pop    %r12
  402224:	41 5d                	pop    %r13
  402226:	41 5e                	pop    %r14
  402228:	41 5f                	pop    %r15
  40222a:	c3                   	retq   

000000000040222b <init_timeout>:
  40222b:	85 ff                	test   %edi,%edi
  40222d:	74 22                	je     402251 <init_timeout+0x26>
  40222f:	53                   	push   %rbx
  402230:	89 fb                	mov    %edi,%ebx
  402232:	be 02 19 40 00       	mov    $0x401902,%esi
  402237:	bf 0e 00 00 00       	mov    $0xe,%edi
  40223c:	e8 af e9 ff ff       	callq  400bf0 <signal@plt>
  402241:	85 db                	test   %ebx,%ebx
  402243:	bf 00 00 00 00       	mov    $0x0,%edi
  402248:	0f 49 fb             	cmovns %ebx,%edi
  40224b:	e8 50 e9 ff ff       	callq  400ba0 <alarm@plt>
  402250:	5b                   	pop    %rbx
  402251:	f3 c3                	repz retq 

0000000000402253 <init_driver>:
  402253:	55                   	push   %rbp
  402254:	53                   	push   %rbx
  402255:	48 83 ec 28          	sub    $0x28,%rsp
  402259:	48 89 fd             	mov    %rdi,%rbp
  40225c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  402263:	00 00 
  402265:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  40226a:	31 c0                	xor    %eax,%eax
  40226c:	be 01 00 00 00       	mov    $0x1,%esi
  402271:	bf 0d 00 00 00       	mov    $0xd,%edi
  402276:	e8 75 e9 ff ff       	callq  400bf0 <signal@plt>
  40227b:	be 01 00 00 00       	mov    $0x1,%esi
  402280:	bf 1d 00 00 00       	mov    $0x1d,%edi
  402285:	e8 66 e9 ff ff       	callq  400bf0 <signal@plt>
  40228a:	be 01 00 00 00       	mov    $0x1,%esi
  40228f:	bf 1d 00 00 00       	mov    $0x1d,%edi
  402294:	e8 57 e9 ff ff       	callq  400bf0 <signal@plt>
  402299:	ba 00 00 00 00       	mov    $0x0,%edx
  40229e:	be 01 00 00 00       	mov    $0x1,%esi
  4022a3:	bf 02 00 00 00       	mov    $0x2,%edi
  4022a8:	e8 33 ea ff ff       	callq  400ce0 <socket@plt>
  4022ad:	85 c0                	test   %eax,%eax
  4022af:	79 4f                	jns    402300 <init_driver+0xad>
  4022b1:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  4022b8:	3a 20 43 
  4022bb:	48 89 45 00          	mov    %rax,0x0(%rbp)
  4022bf:	48 b8 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rax
  4022c6:	20 75 6e 
  4022c9:	48 89 45 08          	mov    %rax,0x8(%rbp)
  4022cd:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  4022d4:	74 6f 20 
  4022d7:	48 89 45 10          	mov    %rax,0x10(%rbp)
  4022db:	48 b8 63 72 65 61 74 	movabs $0x7320657461657263,%rax
  4022e2:	65 20 73 
  4022e5:	48 89 45 18          	mov    %rax,0x18(%rbp)
  4022e9:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
  4022f0:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
  4022f6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4022fb:	e9 0c 01 00 00       	jmpq   40240c <init_driver+0x1b9>
  402300:	89 c3                	mov    %eax,%ebx
  402302:	bf 2e 2a 40 00       	mov    $0x402a2e,%edi
  402307:	e8 f4 e8 ff ff       	callq  400c00 <gethostbyname@plt>
  40230c:	48 85 c0             	test   %rax,%rax
  40230f:	75 68                	jne    402379 <init_driver+0x126>
  402311:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  402318:	3a 20 44 
  40231b:	48 89 45 00          	mov    %rax,0x0(%rbp)
  40231f:	48 b8 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rax
  402326:	20 75 6e 
  402329:	48 89 45 08          	mov    %rax,0x8(%rbp)
  40232d:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402334:	74 6f 20 
  402337:	48 89 45 10          	mov    %rax,0x10(%rbp)
  40233b:	48 b8 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rax
  402342:	76 65 20 
  402345:	48 89 45 18          	mov    %rax,0x18(%rbp)
  402349:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  402350:	72 20 61 
  402353:	48 89 45 20          	mov    %rax,0x20(%rbp)
  402357:	c7 45 28 64 64 72 65 	movl   $0x65726464,0x28(%rbp)
  40235e:	66 c7 45 2c 73 73    	movw   $0x7373,0x2c(%rbp)
  402364:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
  402368:	89 df                	mov    %ebx,%edi
  40236a:	e8 41 e8 ff ff       	callq  400bb0 <close@plt>
  40236f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402374:	e9 93 00 00 00       	jmpq   40240c <init_driver+0x1b9>
  402379:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  402380:	00 
  402381:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  402388:	00 00 
  40238a:	66 c7 04 24 02 00    	movw   $0x2,(%rsp)
  402390:	48 63 50 14          	movslq 0x14(%rax),%rdx
  402394:	48 8b 40 18          	mov    0x18(%rax),%rax
  402398:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
  40239d:	b9 0c 00 00 00       	mov    $0xc,%ecx
  4023a2:	48 8b 30             	mov    (%rax),%rsi
  4023a5:	e8 66 e8 ff ff       	callq  400c10 <__memmove_chk@plt>
  4023aa:	66 c7 44 24 02 27 11 	movw   $0x1127,0x2(%rsp)
  4023b1:	ba 10 00 00 00       	mov    $0x10,%edx
  4023b6:	48 89 e6             	mov    %rsp,%rsi
  4023b9:	89 df                	mov    %ebx,%edi
  4023bb:	e8 d0 e8 ff ff       	callq  400c90 <connect@plt>
  4023c0:	85 c0                	test   %eax,%eax
  4023c2:	79 32                	jns    4023f6 <init_driver+0x1a3>
  4023c4:	41 b8 2e 2a 40 00    	mov    $0x402a2e,%r8d
  4023ca:	b9 f8 2a 40 00       	mov    $0x402af8,%ecx
  4023cf:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  4023d6:	be 01 00 00 00       	mov    $0x1,%esi
  4023db:	48 89 ef             	mov    %rbp,%rdi
  4023de:	b8 00 00 00 00       	mov    $0x0,%eax
  4023e3:	e8 e8 e8 ff ff       	callq  400cd0 <__sprintf_chk@plt>
  4023e8:	89 df                	mov    %ebx,%edi
  4023ea:	e8 c1 e7 ff ff       	callq  400bb0 <close@plt>
  4023ef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4023f4:	eb 16                	jmp    40240c <init_driver+0x1b9>
  4023f6:	89 df                	mov    %ebx,%edi
  4023f8:	e8 b3 e7 ff ff       	callq  400bb0 <close@plt>
  4023fd:	66 c7 45 00 4f 4b    	movw   $0x4b4f,0x0(%rbp)
  402403:	c6 45 02 00          	movb   $0x0,0x2(%rbp)
  402407:	b8 00 00 00 00       	mov    $0x0,%eax
  40240c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  402411:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  402418:	00 00 
  40241a:	74 05                	je     402421 <init_driver+0x1ce>
  40241c:	e8 6f e7 ff ff       	callq  400b90 <__stack_chk_fail@plt>
  402421:	48 83 c4 28          	add    $0x28,%rsp
  402425:	5b                   	pop    %rbx
  402426:	5d                   	pop    %rbp
  402427:	c3                   	retq   

0000000000402428 <driver_post>:
  402428:	53                   	push   %rbx
  402429:	4c 89 c3             	mov    %r8,%rbx
  40242c:	85 c9                	test   %ecx,%ecx
  40242e:	74 24                	je     402454 <driver_post+0x2c>
  402430:	be 38 2b 40 00       	mov    $0x402b38,%esi
  402435:	bf 01 00 00 00       	mov    $0x1,%edi
  40243a:	b8 00 00 00 00       	mov    $0x0,%eax
  40243f:	e8 0c e8 ff ff       	callq  400c50 <__printf_chk@plt>
  402444:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  402449:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  40244d:	b8 00 00 00 00       	mov    $0x0,%eax
  402452:	eb 41                	jmp    402495 <driver_post+0x6d>
  402454:	48 85 ff             	test   %rdi,%rdi
  402457:	74 2e                	je     402487 <driver_post+0x5f>
  402459:	80 3f 00             	cmpb   $0x0,(%rdi)
  40245c:	74 29                	je     402487 <driver_post+0x5f>
  40245e:	41 50                	push   %r8
  402460:	52                   	push   %rdx
  402461:	41 b9 4f 2b 40 00    	mov    $0x402b4f,%r9d
  402467:	49 89 f0             	mov    %rsi,%r8
  40246a:	48 89 f9             	mov    %rdi,%rcx
  40246d:	ba 55 2b 40 00       	mov    $0x402b55,%edx
  402472:	be 11 27 00 00       	mov    $0x2711,%esi
  402477:	bf 2e 2a 40 00       	mov    $0x402a2e,%edi
  40247c:	e8 a1 f5 ff ff       	callq  401a22 <submitr>
  402481:	48 83 c4 10          	add    $0x10,%rsp
  402485:	eb 0e                	jmp    402495 <driver_post+0x6d>
  402487:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  40248c:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  402490:	b8 00 00 00 00       	mov    $0x0,%eax
  402495:	5b                   	pop    %rbx
  402496:	c3                   	retq   
  402497:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40249e:	00 00 

00000000004024a0 <__libc_csu_init>:
  4024a0:	41 57                	push   %r15
  4024a2:	41 56                	push   %r14
  4024a4:	41 89 ff             	mov    %edi,%r15d
  4024a7:	41 55                	push   %r13
  4024a9:	41 54                	push   %r12
  4024ab:	4c 8d 25 5e 19 20 00 	lea    0x20195e(%rip),%r12        # 603e10 <__frame_dummy_init_array_entry>
  4024b2:	55                   	push   %rbp
  4024b3:	48 8d 2d 5e 19 20 00 	lea    0x20195e(%rip),%rbp        # 603e18 <__init_array_end>
  4024ba:	53                   	push   %rbx
  4024bb:	49 89 f6             	mov    %rsi,%r14
  4024be:	49 89 d5             	mov    %rdx,%r13
  4024c1:	4c 29 e5             	sub    %r12,%rbp
  4024c4:	48 83 ec 08          	sub    $0x8,%rsp
  4024c8:	48 c1 fd 03          	sar    $0x3,%rbp
  4024cc:	e8 2f e6 ff ff       	callq  400b00 <_init>
  4024d1:	48 85 ed             	test   %rbp,%rbp
  4024d4:	74 20                	je     4024f6 <__libc_csu_init+0x56>
  4024d6:	31 db                	xor    %ebx,%ebx
  4024d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4024df:	00 
  4024e0:	4c 89 ea             	mov    %r13,%rdx
  4024e3:	4c 89 f6             	mov    %r14,%rsi
  4024e6:	44 89 ff             	mov    %r15d,%edi
  4024e9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4024ed:	48 83 c3 01          	add    $0x1,%rbx
  4024f1:	48 39 eb             	cmp    %rbp,%rbx
  4024f4:	75 ea                	jne    4024e0 <__libc_csu_init+0x40>
  4024f6:	48 83 c4 08          	add    $0x8,%rsp
  4024fa:	5b                   	pop    %rbx
  4024fb:	5d                   	pop    %rbp
  4024fc:	41 5c                	pop    %r12
  4024fe:	41 5d                	pop    %r13
  402500:	41 5e                	pop    %r14
  402502:	41 5f                	pop    %r15
  402504:	c3                   	retq   
  402505:	90                   	nop
  402506:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40250d:	00 00 00 

0000000000402510 <__libc_csu_fini>:
  402510:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000402514 <_fini>:
  402514:	48 83 ec 08          	sub    $0x8,%rsp
  402518:	48 83 c4 08          	add    $0x8,%rsp
  40251c:	c3                   	retq   
